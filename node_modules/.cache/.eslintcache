[{"C:\\gitHub\\retube-reactApp\\src\\index.tsx":"1","C:\\gitHub\\retube-reactApp\\src\\registerServiceWorker.ts":"2","C:\\gitHub\\retube-reactApp\\src\\App.tsx":"3","C:\\gitHub\\retube-reactApp\\src\\AppProvider.tsx":"4","C:\\gitHub\\retube-reactApp\\src\\container\\MobileVideo\\MobileVideo.tsx":"5","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\Navbar.tsx":"6","C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\Edit.tsx":"7","C:\\gitHub\\retube-reactApp\\src\\screens\\Home\\Home.tsx":"8","C:\\gitHub\\retube-reactApp\\src\\screens\\FullPlayer\\FullPlayer.tsx":"9","C:\\gitHub\\retube-reactApp\\src\\screens\\Search\\Search.tsx":"10","C:\\gitHub\\retube-reactApp\\src\\utils\\index.ts":"11","C:\\gitHub\\retube-reactApp\\src\\db.ts":"12","C:\\gitHub\\retube-reactApp\\src\\container\\MobileVideo\\styles.tsx":"13","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\styles.tsx":"14","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\SearchBox.tsx":"15","C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\EditForm.tsx":"16","C:\\gitHub\\retube-reactApp\\src\\components\\VideoPlayer\\styles.tsx":"17","C:\\gitHub\\retube-reactApp\\src\\components\\index.ts":"18","C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\utils.ts":"19","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\styles.tsx":"20","C:\\gitHub\\retube-reactApp\\src\\components\\Form\\styles.tsx":"21","C:\\gitHub\\retube-reactApp\\src\\components\\types.ts":"22","C:\\gitHub\\retube-reactApp\\src\\components\\Form\\InputLabel.tsx":"23","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FullVideo.tsx":"24","C:\\gitHub\\retube-reactApp\\src\\components\\styles.tsx":"25","C:\\gitHub\\retube-reactApp\\src\\components\\VideoPlayer\\VideoPlayer.tsx":"26","C:\\gitHub\\retube-reactApp\\src\\theme\\index.ts":"27","C:\\gitHub\\retube-reactApp\\src\\components\\VideoItem\\VideoItem.tsx":"28","C:\\gitHub\\retube-reactApp\\src\\components\\VideoItem\\styles.tsx":"29","C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\Playlist.tsx":"30","C:\\gitHub\\retube-reactApp\\src\\components\\Form\\InputTime.tsx":"31","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Shortcut.tsx":"32","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\LoadingSpinner.tsx":"33","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ComingNext.tsx":"34","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\BigPlayButton.tsx":"35","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ControlBar.tsx":"36","C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\styles.tsx":"37","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Video.tsx":"38","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Provider.tsx":"39","C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\Item.tsx":"40","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\consts.ts":"41","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\EditButton.tsx":"42","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FragmentControl.tsx":"43","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FullscreenToggle.tsx":"44","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\PlaylistButtons.tsx":"45","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\VolumeMenuButton.tsx":"46","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\PlayToggle.tsx":"47","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ProgressControl.tsx":"48"},{"size":364,"mtime":1632150076308,"results":"49","hashOfConfig":"50"},{"size":4667,"mtime":1632149722115,"results":"51","hashOfConfig":"50"},{"size":989,"mtime":1632150457270,"results":"52","hashOfConfig":"50"},{"size":4292,"mtime":1632176737701,"results":"53","hashOfConfig":"50"},{"size":2269,"mtime":1529546946000,"results":"54","hashOfConfig":"50"},{"size":1697,"mtime":1529546946000,"results":"55","hashOfConfig":"50"},{"size":1685,"mtime":1529546946000,"results":"56","hashOfConfig":"50"},{"size":828,"mtime":1529546946000,"results":"57","hashOfConfig":"50"},{"size":3108,"mtime":1529546946000,"results":"58","hashOfConfig":"50"},{"size":1250,"mtime":1529546946000,"results":"59","hashOfConfig":"50"},{"size":4226,"mtime":1529546946000,"results":"60","hashOfConfig":"50"},{"size":8272,"mtime":1632148666489,"results":"61","hashOfConfig":"50"},{"size":957,"mtime":1529546946000,"results":"62","hashOfConfig":"50"},{"size":4070,"mtime":1529546946000,"results":"63","hashOfConfig":"50"},{"size":1167,"mtime":1529546946000,"results":"64","hashOfConfig":"50"},{"size":5940,"mtime":1529546946000,"results":"65","hashOfConfig":"50"},{"size":509,"mtime":1529546946000,"results":"66","hashOfConfig":"50"},{"size":867,"mtime":1632176023282,"results":"67","hashOfConfig":"50"},{"size":984,"mtime":1529546946000,"results":"68","hashOfConfig":"50"},{"size":7922,"mtime":1529546946000,"results":"69","hashOfConfig":"50"},{"size":2387,"mtime":1529546946000,"results":"70","hashOfConfig":"50"},{"size":322,"mtime":1529546946000,"results":"71","hashOfConfig":"50"},{"size":2075,"mtime":1529546946000,"results":"72","hashOfConfig":"50"},{"size":3510,"mtime":1529546946000,"results":"73","hashOfConfig":"50"},{"size":3578,"mtime":1529546946000,"results":"74","hashOfConfig":"50"},{"size":4200,"mtime":1529546946000,"results":"75","hashOfConfig":"50"},{"size":1629,"mtime":1529546946000,"results":"76","hashOfConfig":"50"},{"size":686,"mtime":1529546946000,"results":"77","hashOfConfig":"50"},{"size":1498,"mtime":1529546946000,"results":"78","hashOfConfig":"50"},{"size":2010,"mtime":1529546946000,"results":"79","hashOfConfig":"50"},{"size":198,"mtime":1529546946000,"results":"80","hashOfConfig":"50"},{"size":2309,"mtime":1529546946000,"results":"81","hashOfConfig":"50"},{"size":861,"mtime":1529546946000,"results":"82","hashOfConfig":"50"},{"size":3562,"mtime":1632177278113,"results":"83","hashOfConfig":"50"},{"size":478,"mtime":1529546946000,"results":"84","hashOfConfig":"50"},{"size":1782,"mtime":1529546946000,"results":"85","hashOfConfig":"50"},{"size":3598,"mtime":1529546946000,"results":"86","hashOfConfig":"50"},{"size":5726,"mtime":1529546946000,"results":"87","hashOfConfig":"50"},{"size":6027,"mtime":1529546946000,"results":"88","hashOfConfig":"50"},{"size":1261,"mtime":1529546946000,"results":"89","hashOfConfig":"50"},{"size":529,"mtime":1529546946000,"results":"90","hashOfConfig":"50"},{"size":1290,"mtime":1529546946000,"results":"91","hashOfConfig":"50"},{"size":3609,"mtime":1632176734545,"results":"92","hashOfConfig":"50"},{"size":707,"mtime":1529546946000,"results":"93","hashOfConfig":"50"},{"size":1229,"mtime":1529546946000,"results":"94","hashOfConfig":"50"},{"size":2204,"mtime":1632177281163,"results":"95","hashOfConfig":"50"},{"size":651,"mtime":1529546946000,"results":"96","hashOfConfig":"50"},{"size":2409,"mtime":1529546946000,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"uqzmgg",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\gitHub\\retube-reactApp\\src\\index.tsx",[],["208","209"],"C:\\gitHub\\retube-reactApp\\src\\registerServiceWorker.ts",[],"C:\\gitHub\\retube-reactApp\\src\\App.tsx",["210"],"import * as React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport AppProvider from \"./AppProvider\";\r\nimport Navbar from \"./container/Navbar/Navbar\";\r\nimport MobileVideo from \"./container/MobileVideo/MobileVideo\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport FullPlayer from \"./screens/FullPlayer/FullPlayer\";\r\nimport Search from \"./screens/Search/Search\";\r\nimport Edit from \"./screens/Edit/Edit\";\r\nimport { isMobile } from \"./utils\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <AppProvider>\r\n        <Navbar />\r\n        {isMobile && <MobileVideo />}\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route exact={true} path=\"/video/:id\" component={FullPlayer} />\r\n        <Route exact={true} path=\"/search/:value\" component={Search} />\r\n        <Route exact={true} path=\"/edit\" component={Edit} />\r\n        <Route exact={true} path=\"/edit/:id\" component={Edit} />\r\n      </AppProvider>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\gitHub\\retube-reactApp\\src\\AppProvider.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\container\\MobileVideo\\MobileVideo.tsx",["211","212"],"import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { FullVideo, IFullVideoProps, IVideoClip } from \"../../components\";\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\n\nimport {\n  findVideoClipForId,\n  findVideoClipIndexForId,\n  getPlaylistActions\n} from \"../../utils\";\nimport { MobileVideoStyled, MobileVideoCloseStyled } from \"./styles\";\nimport { VideoPlayStyled } from \"../../components/VideoPlayer/styles\";\n\ninterface IProps extends RouteComponentProps<any>, IAppProvider {}\n\nconst MobileVideo = withRouter((props: IProps) => {\n  const {\n    playlist,\n    idVideo,\n    inFullPlayer,\n    autoPlaylist,\n    setAutoPlaylist,\n    repeat,\n    random\n  } = props;\n  const showControls = inFullPlayer;\n\n  const changeVideo = (id: string) => {\n    props.history.push(\"/video/\" + id);\n  };\n\n  const handlePlaylistAction = (videoClip: IVideoClip) => {\n    changeVideo(videoClip.id);\n  };\n\n  const handleClick = () => {\n    if (!showControls) {\n      changeVideo(props.idVideo);\n    }\n  };\n\n  const handleClose = () => {\n    props.setIdVideo(\"\");\n  };\n\n  const propsFullVideo: IFullVideoProps = {\n    autoPlay: true,\n    onChangeAutoPlaylist: setAutoPlaylist,\n    onClickPlaylistAction: handlePlaylistAction,\n    showControls\n  };\n\n  if (idVideo !== \"\") {\n    const index = findVideoClipIndexForId(playlist, idVideo);\n    const {\n      nextVideoClip,\n      backVideoClip,\n      currentVideoClip\n    } = getPlaylistActions(index, playlist, repeat, random);\n\n    propsFullVideo.autoPlaylist = nextVideoClip ? autoPlaylist : false;\n    propsFullVideo.currentVideoClip = currentVideoClip;\n    propsFullVideo.backVideoClip = backVideoClip;\n    propsFullVideo.nextVideoClip = nextVideoClip;\n  }\n\n  return (\n    <MobileVideoStyled top={inFullPlayer} hidden={idVideo === \"\"}>\n      <MobileVideoCloseStyled onClick={handleClose}>\n        <i className=\"fas fa-times\" />\n      </MobileVideoCloseStyled>\n      <VideoPlayStyled onClick={handleClick}>\n        <FullVideo {...propsFullVideo} />\n      </VideoPlayStyled>\n    </MobileVideoStyled>\n  );\n});\n\nexport default () => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <MobileVideo {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\Navbar.tsx",["213"],"import * as React from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport {\n  NavbarStyled,\n  NavbarLogoStyled,\n  NavBarLink,\n  NavbarButtonStyled\n} from \"./styles\";\nimport SearchBox from \"./SearchBox\";\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\n\ninterface IProps extends RouteComponentProps<any>, IAppProvider {}\n\nconst Navbar = withRouter(({ history, location, resetDatabase }: IProps) => {\n  const handleRecover = () => {\n    resetDatabase();\n  };\n\n  const isInVideoPage = location.pathname.indexOf(\"/video\") > -1;\n\n  return (\n    <NavbarStyled gray={isInVideoPage}>\n      <NavbarLogoStyled gray={isInVideoPage}>\n        <Link to=\"/\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 47328 33689\">\n            <rect\n              fill=\"#35a9ff\"\n              x=\"250\"\n              y=\"250\"\n              width=\"46828\"\n              height=\"33189\"\n              rx=\"6444\"\n              ry=\"6444\"\n            />\n            <polygon\n              fill=\"#F6F4EC\"\n              points=\"18549,7972 18549,25476 32726,17291 \"\n            />\n          </svg>\n        </Link>\n      </NavbarLogoStyled>\n      <SearchBox history={history} />\n      <NavBarLink>\n        <Link to=\"/edit\">\n          <i className=\"fas fa-plus\" /> <span>Add videos</span>\n        </Link>\n      </NavBarLink>\n      <NavbarButtonStyled onClick={handleRecover}>\n        <i className=\"fas fa-download\" /> <span>Recover localstorage</span>\n      </NavbarButtonStyled>\n    </NavbarStyled>\n  );\n});\n\nexport default () => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <Navbar {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\Edit.tsx",["214"],"import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport EditForm from \"./EditForm\";\nimport {\n  CardStyled,\n  ContentStyled,\n  PageStyled,\n  TitlePageStyled,\n  IVideoClip\n} from \"../../components\";\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\nimport { findVideoClipIndexForId } from \"../../utils\";\n\ninterface IRouterProps {\n  id?: string;\n}\n\ninterface IProps\n  extends IAppProvider,\n    RouteComponentProps<IRouterProps> {}\n\nclass Edit extends React.Component<IProps> {\n  public state = {};\n\n  public handleSuccess = (playlist: IVideoClip) => {\n    const { setVideoClip, addVideoClip } = this.props;\n    const { id } = this.props.match.params;\n\n    if (id) {\n      setVideoClip(id, playlist);\n    } else {\n      addVideoClip(playlist);\n    }\n  };\n\n  public render() {\n    const { playlist, history } = this.props;\n    const { id } = this.props.match.params;\n    let index;\n    if (id) {\n      index = findVideoClipIndexForId(playlist, id);\n    }\n    const existsIndex = index !== undefined;\n\n    return (\n      <PageStyled>\n        <ContentStyled>\n          <CardStyled>\n            <TitlePageStyled>\n              {id ? \"Edit video\" : \"Add to playlist\"}\n            </TitlePageStyled>\n            <EditForm\n              playlist={existsIndex ? playlist[index] : undefined}\n              history={history}\n              onSuccess={this.handleSuccess}\n            />\n          </CardStyled>\n        </ContentStyled>\n      </PageStyled>\n    );\n  }\n}\n\nexport default (props: RouteComponentProps<IRouterProps>) => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <Edit {...props} {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\screens\\Home\\Home.tsx",["215"],"import * as React from \"react\";\nimport {\n  VideoItem,\n  SidebarStyled,\n  ContentDinamicStyled,\n  VideoItemListStyled,\n  PageWithSidebarStyled\n} from \"../../components\";\n\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\n\ninterface IProps extends IAppProvider {}\n\nconst Home: React.SFC<IProps> = props => {\n  return (\n    <div>\n      <SidebarStyled />\n      <PageWithSidebarStyled>\n        <ContentDinamicStyled>\n          <VideoItemListStyled>\n            {props.playlist.map((videoClip, index) => (\n              <VideoItem key={index} {...videoClip} />\n            ))}\n          </VideoItemListStyled>\n        </ContentDinamicStyled>\n      </PageWithSidebarStyled>\n    </div>\n  );\n};\n\nexport default () => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <Home {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\screens\\FullPlayer\\FullPlayer.tsx",["216"],"import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  FullVideo,\n  VideoPlayer,\n  Playlist,\n  VideoClipContainer,\n  ContentFullStyled,\n  PageStyled,\n  LayoutFullVideo\n} from \"../../components\";\n\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\nimport { isMobile } from \"../../utils\";\n\ninterface IRouterProps {\n  id: string;\n}\n\ninterface IProps extends IAppProvider, RouteComponentProps<IRouterProps> {}\n\nclass FullPlayer extends React.Component<IProps> {\n  public componentWillMount() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    this.props.setInFullPlayer(true);\n    this.props.setIdVideo(this.props.match.params.id);\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    const idVideo = this.props.match.params.id;\n    const newIdVideo = nextProps.match.params.id;\n\n    if (idVideo !== newIdVideo) {\n      this.props.setIdVideo(newIdVideo);\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.setInFullPlayer(false);\n  }\n\n  public handleEdit = (idSelected: string) => {\n    this.props.history.push(\"/edit/\" + idSelected);\n  };\n\n  public handleUpdateSelected = (idSelected: string) => {\n    this.props.history.push(\"/video/\" + idSelected);\n  };\n\n  public render() {\n    const routerParams = this.props.match.params;\n\n    return (\n      <PageStyled>\n        <ContentFullStyled>\n          <VideoPlayer\n            random={this.props.random}\n            onChangeRandom={this.props.setRandom}\n            onRemoveVideoClip={this.props.removePlaylistItem}\n            idSelected={routerParams.id}\n            autoPlaylist={this.props.autoPlaylist}\n            repeat={this.props.repeat}\n            onChangeAutoPlaylist={this.props.setAutoPlaylist}\n            onChangeRepeat={this.props.setRepeat}\n            onChangeSelected={this.handleUpdateSelected}\n            onChangeVideoClip={this.props.setVideoClip}\n            playlist={this.props.playlist}\n          >\n            {isMobile ? <LayoutFullVideo /> : <FullVideo />}\n            <Playlist>\n              <VideoClipContainer>\n                {idVideoClip => (\n                  <React.Fragment>\n                    {routerParams.id !== idVideoClip && (\n                      <button\n                        onClick={this.props.removePlaylistItem.bind(\n                          null,\n                          idVideoClip\n                        )}\n                      >\n                        <i className=\"fas fa-trash-alt\" />\n                      </button>\n                    )}\n                    <button onClick={this.handleEdit.bind(null, idVideoClip)}>\n                      <i className=\"fas fa-edit\" />\n                    </button>\n                  </React.Fragment>\n                )}\n              </VideoClipContainer>\n            </Playlist>\n          </VideoPlayer>\n        </ContentFullStyled>\n      </PageStyled>\n    );\n  }\n}\n\nexport default (props: RouteComponentProps<IRouterProps>) => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <FullPlayer {...props} {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\screens\\Search\\Search.tsx",["217"],"import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  SidebarStyled,\n  ContentDinamicStyled,\n  PageWithSidebarStyled,\n  Playlist\n} from \"../../components\";\n\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\n\ninterface IRouterProps {\n  value: string;\n}\n\ninterface IProps\n  extends IAppProvider,\n    RouteComponentProps<IRouterProps> {}\n\nconst Search: React.SFC<IProps> = props => {\n  const value = props.match.params.value;\n\n  const filteredPlaylist = props.playlist.filter(videoClip => {\n    return videoClip.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\n  });\n\n  const handleClickVideo = (id: string) => {\n    props.history.push(\"/video/\" + id);\n  };\n\n  return (\n    <React.Fragment>\n      <SidebarStyled />\n      <PageWithSidebarStyled>\n        <ContentDinamicStyled>\n          <Playlist\n            expand={true}\n            playlist={filteredPlaylist}\n            onClick={handleClickVideo}\n          />\n        </ContentDinamicStyled>\n      </PageWithSidebarStyled>\n    </React.Fragment>\n  );\n};\n\nexport default (props: RouteComponentProps<IRouterProps>) => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <Search {...props} {...value} />}\n  </AppProvider.Consumer>\n);\n","C:\\gitHub\\retube-reactApp\\src\\utils\\index.ts",[],"C:\\gitHub\\retube-reactApp\\src\\db.ts",[],"C:\\gitHub\\retube-reactApp\\src\\container\\MobileVideo\\styles.tsx",["218"],"import { StyledFunction } from \"styled-components\";\nimport styled, { device, theme } from \"../../theme\";\nimport { EditButtonStyled } from \"../../components/FullVideo/styles\";\n\ninterface IDivStyled {\n  [x: string]: any;\n}\nconst div: StyledFunction<IDivStyled & React.HTMLProps<HTMLInputElement>> =\n  styled.div;\n\nexport const MobileVideoStyled = div`\nposition: ${({ top }) => (top ? \"absolute\" : \"fixed\")};\nbottom: 0;\ntop: ${({ top }) => (top ? \"208px\" : \"100%\")};\nmargin-top: -152px;\nheight: 152px;\nwidth: ${({ top }) => (top ? \"100%\" : \"270px\")};\nright: 0;\nz-index: 1;\nopacity: 1;\ntransition: all 0.2s;\n\n${EditButtonStyled} {\n  display: none;\n}\n`;\n\nexport const MobileVideoWrapperStyled = div`\nwidth: 100%;\npadding: 0px;\ndisplay: flex;\n`;\n\nexport const MobileVideoCloseStyled = div`\nposition: absolute;\nleft: -26px;\nbackground: white;\nfont-size: 17px;\nwidth: 26px;\nheight: 26px;\npadding-top: 5px;\ncolor: ${() => theme.primaryColor};\ntext-align: center;\n`;\n","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\styles.tsx",["219"],"import * as React from \"react\";\nimport { StyledFunction } from \"styled-components\";\nimport {\n  InputLabelGeneralStyled,\n  InputStyled\n} from \"../../components/Form/styles\";\nimport styled, { theme, device } from \"../../theme\";\n// tslint:disable:no-shadowed-variable\n\ninterface IDivStyled {\n  [x: string]: any;\n}\nconst div: StyledFunction<IDivStyled & React.HTMLProps<HTMLInputElement>> =\n  styled.div;\nconst button: StyledFunction<IDivStyled & React.HTMLProps<HTMLInputElement>> =\n  styled.button;\nconst form: StyledFunction<IDivStyled & React.HTMLProps<HTMLInputElement>> =\n  styled.form;\n\nexport const NavbarStyled: React.SFC<any> = props => (\n  <NavbarWrapperStyled>\n    <NavbarContainerStyled {...props} />\n  </NavbarWrapperStyled>\n);\n\nexport const NavbarWrapperStyled = div`\nposition: fixed;\ntop: 0;\nwidth: 100%;\nz-index: 50;\nbackground: #ffffff;\n:after {\n    bottom: -5px;\n    box-shadow: inset 0px 4px 8px -3px rgba(17, 17, 17, .06);\n    content: \"\";\n    height: 5px;\n    left: 0px;\n    opacity: 1;\n    position: absolute;\n    right: 0px;\n    width: 100%;\n}\n${InputLabelGeneralStyled} {\n  margin: 0;\n  @media ${device.laptop} {\n    overflow: hidden;\n    border-radius: 2px;\n  }\n  input {\n    margin: 0;\n    font-size: 16px;\n    line-height: 24px;\n    background-color: #ffffff;\n    border: 1px solid #ccc;\n    border-right: none;\n    box-shadow: inset 0 1px 2px #eeeeee;\n    padding: 2px 11px;\n    border-radius: 2px 0 0 2px;\n    width: 400px;\n    @media ${device.laptop} {\n      width: 95%;\n      border-radius: 2px;\n      border-width: 0px;\n      margin-left: 5px;\n    }\n  }\n}\n`;\n\nexport const NavbarContainerStyled = div`\nheight: 56px;\npadding: 0 16px;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\nflex-wrap: wrap;\n@media ${device.laptop} {\n  padding: 0 5px;\n  background-color: ${({ gray }) =>\n    gray ? theme.darkHeader : theme.primaryColor}\n}\n`;\n\nexport const NavbarLogoStyled = div`\nheight: 24px;\nwidth: 40px;\ncursor: pointer;\nsvg {\n  width: 100%;\n  height: 100%;\n  @media ${device.laptop} {\n    rect {\n      fill: white;\n    }\n    polygon {\n      fill: ${({ gray }) => (gray ? theme.darkHeader : theme.primaryColor)}\n    }\n  }\n}\n`;\n\nexport const NavBarLink = div`\nmargin-right: 5px;\na {\n  cursor: pointer;\n  border: 1px solid #d3d3d3;\n  background-color: #f8f8f8;\n  color: ${() => theme.darkColor}\n  border-radius: 2px;\n  margin: 0;\n  padding: 6px 20px;\n  font-size: 13px;\n  text-align: center;\n  vertical-align: middle;\n  display: inline-block;\n  :hover {\n    border-color: #c6c6c6;\n    background-color: #f0f0f0;\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.10);\n    @media ${device.laptop} {\n      background: transparent;\n      border-color: transparent;\n      box-shadow: none;\n    }\n  }\n  @media ${device.laptop} {\n    background: transparent;\n    border-color: transparent;\n    color: white;\n    padding: 6px 11px;\n  }\n}\n@media ${device.laptop} {\n  span {\n    display: none;\n  }\n}\n`;\n\nexport const NavbarButtonStyled = button`\ncursor: pointer;\nborder: 1px solid #d3d3d3;\nbackground-color: #f8f8f8;\ncolor: ${() => theme.darkColor}\nborder-radius: 2px;\nmargin: 0;\npadding: 6px 20px;\n:hover {\n  border-color: #c6c6c6;\n  background-color: #f0f0f0;\n  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.10);\n  @media ${device.laptop} {\n    background: transparent;\n    border-color: transparent;\n    box-shadow: none;\n  }\n}\n@media ${device.laptop} {\n  background: transparent;\n  border-color: transparent;\n  color: white;\n  padding: 6px 11px;\n  span {\n    display: none;\n  }\n}\n`;\n\nexport const navbarButton: StyledFunction<\n  IDivStyled & React.HTMLProps<HTMLInputElement>\n> = styled(NavbarButtonStyled);\n\nexport const SearchBoxStyled = div`\nmargin: 0 40px;\ndisplay: flex;\n\n@media ${device.laptop} {\n  margin: 0;\n  flex: 1;\n  padding-right: 7px;\n}\n`;\n\nexport const SearchBoxFormStyled = form`\ndisplay: flex;\nflex-direction: row;\n`;\n\nexport const SearchBoxButtonStyled = navbarButton`\nborder-radius: 0 2px 2px 0;\nwidth: 65px;\npadding: 0px;\n@media ${device.laptop} {\n  border-color: transparent;\n  background-color: transparent;\n  color: white;\n  width: 43px;\n}\n`;\n","C:\\gitHub\\retube-reactApp\\src\\container\\Navbar\\SearchBox.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\EditForm.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\VideoPlayer\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\index.ts",[],"C:\\gitHub\\retube-reactApp\\src\\screens\\Edit\\utils.ts",["220"],"import { IVideoClip } from \"../../components\";\nimport { IFormSuccess } from \"./type\";\n\nexport const validRequired = (value: string = \"\"): boolean => {\n  return !!value.trim().length;\n};\n\nexport const validTime = (value: string = \"\"): boolean => {\n  return value.replace(/\\s|\\_/g, '').length - 2 === 6;\n};\n\nexport const getTime = (value: string = \"\"): number => {\n  const hmsArray = value.split(\":\");\n  return +hmsArray[0] * 60 * 60 + +hmsArray[1] * 60 + +hmsArray[2];\n};\n\nexport const validImageURL = (url: string = \"\"): boolean => {\n  return url.match(/\\.(jpeg|jpg|gif|png)/) !== null;\n};\n\nexport const validVideoURL = (url: string = \"\"): boolean => {\n  return url.match(/\\.mp4/) != null;\n};\n\nexport const parseFormtoPlaylist = (value: IFormSuccess): IVideoClip => {\n  return {\n    endTime: getTime(value.endTime),\n    id: String(Date.now()),\n    image: value.image,\n    src: value.video,\n    startTime: getTime(value.startTime),\n    tags: value.tags,\n    title: value.title\n  };\n};\n","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\Form\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\types.ts",[],["221","222"],"C:\\gitHub\\retube-reactApp\\src\\components\\Form\\InputLabel.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FullVideo.tsx",["223","224"],"import * as React from \"react\";\nimport ControlBar from \"./ControlBar\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ComingNext from \"./ComingNext\";\nimport Shortcut from \"./Shortcut\";\nimport Video from \"./Video\";\nimport { IVideoClip, IVideoClipOptional } from \"../types\";\nimport FullVideoProvider, { IFullVideoProvider } from \"./Provider\";\n\nimport { FullVideoStyled, TitleStyled } from \"./styles\";\nimport BigPlayButton from \"./BigPlayButton\";\nimport { isiOS } from \"../../utils\";\n\nexport interface IExternalProps {\n  autoPlay?: boolean;\n  showControls?: boolean;\n  autoPlaylist?: boolean;\n  currentVideoClip?: IVideoClip;\n  backVideoClip?: IVideoClip;\n  nextVideoClip?: IVideoClip;\n  onChangeTimeFragment?: (startTime: number, endTime: number) => void;\n  onChangeAutoPlaylist?: (autoPlaylist: boolean) => void;\n  onClickPlaylistAction?: (videoClip: IVideoClip) => void;\n  children?: any;\n}\n\nexport interface IProps extends IExternalProps, IFullVideoProvider {\n  currentVideoClip: IVideoClip;\n}\n\ninterface IDefaultProps {\n  currentVideoClip: IVideoClipOptional;\n  showControls: boolean;\n}\n\nexport interface IPropsChildrens extends IProps {\n  video: any;\n}\n\nclass FullVideo extends React.Component<IProps> {\n  public static defaultProps: IDefaultProps = {\n    currentVideoClip: {\n      id: \"\",\n      src: \"\",\n      startTime: 0\n    },\n    showControls: true\n  };\n\n  public video: Video;\n  public controlsHideTimer: any;\n\n  public startControlsTimer = () => {\n    const { userActivate } = this.props;\n    userActivate(true);\n    clearTimeout(this.controlsHideTimer);\n    this.controlsHideTimer = setTimeout(() => {\n      userActivate(false);\n    }, 1500);\n  };\n\n  public handleFocus = () => {\n    this.props.playerActivate(true);\n  };\n\n  public handleBlur = () => {\n    this.props.playerActivate(false);\n  };\n\n  public render() {\n    const provider = this.props.provider;\n    const { fullscreen, userActivity, paused } = provider;\n    const { src, id, title } = this.props.currentVideoClip;\n\n    const existsID = id !== \"\";\n\n    const showControls = this.props.showControls && existsID;\n\n    const propsWithoutChildren: IProps = {\n      ...this.props,\n      children: null\n    };\n\n    const propsActionChildren: IPropsChildrens = {\n      ...propsWithoutChildren,\n      video: this.video ? this.video : null\n    };\n\n    return (\n      <FullVideoStyled\n        fullscreen={fullscreen}\n        showControls={userActivity || paused}\n        onTouchStart={this.startControlsTimer}\n        onMouseDown={this.startControlsTimer}\n        onMouseMove={this.startControlsTimer}\n        onKeyDown={this.startControlsTimer}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      >\n        {showControls && <TitleStyled>{title}</TitleStyled>}\n        <Video\n          ref={(c: any) => {\n            this.video = c;\n          }}\n          {...propsWithoutChildren}\n        >\n          <source src={src + \"?id=\" + id} />\n        </Video>\n        {showControls && <BigPlayButton {...propsActionChildren} />}\n        <ComingNext {...propsActionChildren} />\n        {showControls && <LoadingSpinner {...propsActionChildren} />}\n        {showControls && <ControlBar {...propsActionChildren} />}\n        <Shortcut {...propsActionChildren} />\n      </FullVideoStyled>\n    );\n  }\n}\n\nexport default (props: IExternalProps | any) => (\n  <FullVideoProvider>\n    <FullVideoProvider.Consumer>\n      {(value: any) => <FullVideo {...props} {...value} />}\n    </FullVideoProvider.Consumer>\n  </FullVideoProvider>\n);\n","C:\\gitHub\\retube-reactApp\\src\\components\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\VideoPlayer\\VideoPlayer.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\theme\\index.ts",[],"C:\\gitHub\\retube-reactApp\\src\\components\\VideoItem\\VideoItem.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\VideoItem\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\Playlist.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\Form\\InputTime.tsx",["225"],"import * as React from \"react\";\nimport MaskedInput from \"react-text-mask\";\n\nexport default props => (\n  <MaskedInput\n    {...props}\n    mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n  />\n);\n","C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Shortcut.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\LoadingSpinner.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ComingNext.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\BigPlayButton.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ControlBar.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\styles.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Video.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\Provider.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\Playlist\\Item.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\consts.ts",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\EditButton.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FragmentControl.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\FullscreenToggle.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\PlaylistButtons.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\VolumeMenuButton.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\PlayToggle.tsx",[],"C:\\gitHub\\retube-reactApp\\src\\components\\FullVideo\\ProgressControl.tsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":12,"column":1,"nodeType":"232","endLine":26,"endColumn":3},{"ruleId":"233","severity":1,"message":"234","line":8,"column":3,"nodeType":"235","messageId":"236","endLine":8,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":80,"column":1,"nodeType":"232","endLine":84,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":56,"column":1,"nodeType":"232","endLine":60,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":64,"column":1,"nodeType":"232","endLine":68,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":31,"column":1,"nodeType":"232","endLine":35,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":99,"column":1,"nodeType":"232","endLine":103,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":47,"column":1,"nodeType":"232","endLine":51,"endColumn":3},{"ruleId":"233","severity":1,"message":"237","line":2,"column":18,"nodeType":"235","messageId":"236","endLine":2,"endColumn":24},{"ruleId":"233","severity":1,"message":"238","line":5,"column":3,"nodeType":"235","messageId":"236","endLine":5,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":9,"column":28,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29,"suggestions":"243"},{"ruleId":"226","replacedBy":"244"},{"ruleId":"228","replacedBy":"245"},{"ruleId":"233","severity":1,"message":"246","line":12,"column":10,"nodeType":"235","messageId":"236","endLine":12,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":119,"column":1,"nodeType":"232","endLine":125,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":4,"column":1,"nodeType":"232","endLine":9,"endColumn":3},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'findVideoClipForId' is defined but never used.","Identifier","unusedVar","'device' is defined but never used.","'InputStyled' is defined but never used.","no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["249","250"],["247"],["248"],"'isiOS' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"251","fix":"252","desc":"253"},{"messageId":"254","fix":"255","desc":"256"},"removeEscape",{"range":"257","text":"258"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"259","text":"260"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[274,275],"",[274,274],"\\"]