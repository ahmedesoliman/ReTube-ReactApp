{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\retube-reactApp\\\\src\\\\components\\\\FullVideo\\\\FullVideo.tsx\";\nimport * as React from \"react\";\nimport ControlBar from \"./ControlBar\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ComingNext from \"./ComingNext\";\nimport Shortcut from \"./Shortcut\";\nimport Video from \"./Video\";\nimport FullVideoProvider from \"./Provider\";\nimport { FullVideoStyled, TitleStyled } from \"./styles\";\nimport BigPlayButton from \"./BigPlayButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FullVideo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.video = void 0;\n    this.controlsHideTimer = void 0;\n\n    this.startControlsTimer = () => {\n      const {\n        userActivate\n      } = this.props;\n      userActivate(true);\n      clearTimeout(this.controlsHideTimer);\n      this.controlsHideTimer = setTimeout(() => {\n        userActivate(false);\n      }, 1500);\n    };\n\n    this.handleFocus = () => {\n      this.props.playerActivate(true);\n    };\n\n    this.handleBlur = () => {\n      this.props.playerActivate(false);\n    };\n  }\n\n  render() {\n    const provider = this.props.provider;\n    const {\n      fullscreen,\n      userActivity,\n      paused\n    } = provider;\n    const {\n      src,\n      id,\n      title\n    } = this.props.currentVideoClip;\n    const existsID = id !== \"\";\n    const showControls = this.props.showControls && existsID;\n    const propsWithoutChildren = { ...this.props,\n      children: null\n    };\n    const propsActionChildren = { ...propsWithoutChildren,\n      video: this.video ? this.video : null\n    };\n    return /*#__PURE__*/_jsxDEV(FullVideoStyled, {\n      fullscreen: fullscreen,\n      showControls: userActivity || paused,\n      onTouchStart: this.startControlsTimer,\n      onMouseDown: this.startControlsTimer,\n      onMouseMove: this.startControlsTimer,\n      onKeyDown: this.startControlsTimer,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      children: [showControls && /*#__PURE__*/_jsxDEV(TitleStyled, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Video, {\n        ref: c => {\n          this.video = c;\n        },\n        ...propsWithoutChildren,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: src + \"?id=\" + id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), showControls && /*#__PURE__*/_jsxDEV(BigPlayButton, { ...propsActionChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ComingNext, { ...propsActionChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), showControls && /*#__PURE__*/_jsxDEV(LoadingSpinner, { ...propsActionChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 26\n      }, this), showControls && /*#__PURE__*/_jsxDEV(ControlBar, { ...propsActionChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Shortcut, { ...propsActionChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFullVideo.defaultProps = {\n  currentVideoClip: {\n    id: \"\",\n    src: \"\",\n    startTime: 0\n  },\n  showControls: true\n};\nexport default (props => /*#__PURE__*/_jsxDEV(FullVideoProvider, {\n  children: /*#__PURE__*/_jsxDEV(FullVideoProvider.Consumer, {\n    children: value => /*#__PURE__*/_jsxDEV(FullVideo, { ...props,\n      ...value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 120,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/FullVideo.tsx"],"names":["React","ControlBar","LoadingSpinner","ComingNext","Shortcut","Video","FullVideoProvider","FullVideoStyled","TitleStyled","BigPlayButton","FullVideo","Component","video","controlsHideTimer","startControlsTimer","userActivate","props","clearTimeout","setTimeout","handleFocus","playerActivate","handleBlur","render","provider","fullscreen","userActivity","paused","src","id","title","currentVideoClip","existsID","showControls","propsWithoutChildren","children","propsActionChildren","c","defaultProps","startTime","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ControlBar from \"./ControlBar\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ComingNext from \"./ComingNext\";\nimport Shortcut from \"./Shortcut\";\nimport Video from \"./Video\";\nimport { IVideoClip, IVideoClipOptional } from \"../types\";\nimport FullVideoProvider, { IFullVideoProvider } from \"./Provider\";\n\nimport { FullVideoStyled, TitleStyled } from \"./styles\";\nimport BigPlayButton from \"./BigPlayButton\";\nimport { isiOS } from \"../../utils\";\n\nexport interface IExternalProps {\n  autoPlay?: boolean;\n  showControls?: boolean;\n  autoPlaylist?: boolean;\n  currentVideoClip?: IVideoClip;\n  backVideoClip?: IVideoClip;\n  nextVideoClip?: IVideoClip;\n  onChangeTimeFragment?: (startTime: number, endTime: number) => void;\n  onChangeAutoPlaylist?: (autoPlaylist: boolean) => void;\n  onClickPlaylistAction?: (videoClip: IVideoClip) => void;\n  children?: any;\n}\n\nexport interface IProps extends IExternalProps, IFullVideoProvider {\n  currentVideoClip: IVideoClip;\n}\n\ninterface IDefaultProps {\n  currentVideoClip: IVideoClipOptional;\n  showControls: boolean;\n}\n\nexport interface IPropsChildrens extends IProps {\n  video: any;\n}\n\nclass FullVideo extends React.Component<IProps> {\n  public static defaultProps: IDefaultProps = {\n    currentVideoClip: {\n      id: \"\",\n      src: \"\",\n      startTime: 0\n    },\n    showControls: true\n  };\n\n  public video: Video;\n  public controlsHideTimer: any;\n\n  public startControlsTimer = () => {\n    const { userActivate } = this.props;\n    userActivate(true);\n    clearTimeout(this.controlsHideTimer);\n    this.controlsHideTimer = setTimeout(() => {\n      userActivate(false);\n    }, 1500);\n  };\n\n  public handleFocus = () => {\n    this.props.playerActivate(true);\n  };\n\n  public handleBlur = () => {\n    this.props.playerActivate(false);\n  };\n\n  public render() {\n    const provider = this.props.provider;\n    const { fullscreen, userActivity, paused } = provider;\n    const { src, id, title } = this.props.currentVideoClip;\n\n    const existsID = id !== \"\";\n\n    const showControls = this.props.showControls && existsID;\n\n    const propsWithoutChildren: IProps = {\n      ...this.props,\n      children: null\n    };\n\n    const propsActionChildren: IPropsChildrens = {\n      ...propsWithoutChildren,\n      video: this.video ? this.video : null\n    };\n\n    return (\n      <FullVideoStyled\n        fullscreen={fullscreen}\n        showControls={userActivity || paused}\n        onTouchStart={this.startControlsTimer}\n        onMouseDown={this.startControlsTimer}\n        onMouseMove={this.startControlsTimer}\n        onKeyDown={this.startControlsTimer}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      >\n        {showControls && <TitleStyled>{title}</TitleStyled>}\n        <Video\n          ref={(c: any) => {\n            this.video = c;\n          }}\n          {...propsWithoutChildren}\n        >\n          <source src={src + \"?id=\" + id} />\n        </Video>\n        {showControls && <BigPlayButton {...propsActionChildren} />}\n        <ComingNext {...propsActionChildren} />\n        {showControls && <LoadingSpinner {...propsActionChildren} />}\n        {showControls && <ControlBar {...propsActionChildren} />}\n        <Shortcut {...propsActionChildren} />\n      </FullVideoStyled>\n    );\n  }\n}\n\nexport default (props: IExternalProps | any) => (\n  <FullVideoProvider>\n    <FullVideoProvider.Consumer>\n      {(value: any) => <FullVideo {...props} {...value} />}\n    </FullVideoProvider.Consumer>\n  </FullVideoProvider>\n);\n"]},"metadata":{},"sourceType":"module"}