{"ast":null,"code":"import _objectSpread from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import FragmentControl from\"./FragmentControl\";import EditButton from\"./EditButton\";import VolumeMenuButton from\"./VolumeMenuButton\";import{BackButton,NextButton}from\"./PlaylistButtons\";import FullscreenToggle from\"./FullscreenToggle\";import PlayToggle from\"./PlayToggle\";import ProgressControl from\"./ProgressControl\";import{ControlBarStyled,ControlBarGradientStyled,ControlBarBottomStyled,ControlBarBottomSideStyled,ControlBarTopStyled,TextPlayerStyled}from\"./styles\";import{formatTime}from\"../../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ControlBar=function ControlBar(props){var _props$provider=props.provider,currentTime=_props$provider.currentTime,duration=_props$provider.duration;var totalTimeFormat=formatTime(duration);var currentTimeFormat=formatTime(currentTime,duration);return/*#__PURE__*/_jsxs(ControlBarStyled,{children:[/*#__PURE__*/_jsx(ControlBarGradientStyled,{}),/*#__PURE__*/_jsxs(ControlBarTopStyled,{children:[/*#__PURE__*/_jsx(ProgressControl,_objectSpread({},props)),/*#__PURE__*/_jsx(FragmentControl,_objectSpread({},props))]}),/*#__PURE__*/_jsxs(ControlBarBottomStyled,{children:[/*#__PURE__*/_jsxs(ControlBarBottomSideStyled,{children:[/*#__PURE__*/_jsx(BackButton,_objectSpread({},props)),/*#__PURE__*/_jsx(PlayToggle,_objectSpread({},props)),/*#__PURE__*/_jsx(NextButton,_objectSpread({},props)),/*#__PURE__*/_jsx(VolumeMenuButton,_objectSpread({},props)),/*#__PURE__*/_jsxs(TextPlayerStyled,{children:[currentTimeFormat,\" / \",totalTimeFormat]})]}),/*#__PURE__*/_jsxs(ControlBarBottomSideStyled,{children:[/*#__PURE__*/_jsx(FullscreenToggle,_objectSpread({},props)),/*#__PURE__*/_jsx(EditButton,_objectSpread({},props))]})]})]});};export default ControlBar;","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/ControlBar.tsx"],"names":["React","FragmentControl","EditButton","VolumeMenuButton","BackButton","NextButton","FullscreenToggle","PlayToggle","ProgressControl","ControlBarStyled","ControlBarGradientStyled","ControlBarBottomStyled","ControlBarBottomSideStyled","ControlBarTopStyled","TextPlayerStyled","formatTime","ControlBar","props","provider","currentTime","duration","totalTimeFormat","currentTimeFormat"],"mappings":"+IAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAIA,OACEC,gBADF,CAEEC,wBAFF,CAGEC,sBAHF,CAIEC,0BAJF,CAKEC,mBALF,CAMEC,gBANF,KAOO,UAPP,CAQA,OAASC,UAAT,KAA2B,aAA3B,C,wFAMA,GAAMC,CAAAA,UAA6B,CAAG,QAAhCA,CAAAA,UAAgC,CAAAC,KAAK,CAAI,CAC7C,oBAAkCA,KAAK,CAACC,QAAxC,CAAQC,WAAR,iBAAQA,WAAR,CAAqBC,QAArB,iBAAqBA,QAArB,CACA,GAAMC,CAAAA,eAAe,CAAGN,UAAU,CAACK,QAAD,CAAlC,CACA,GAAME,CAAAA,iBAAiB,CAAGP,UAAU,CAACI,WAAD,CAAcC,QAAd,CAApC,CAEA,mBACE,MAAC,gBAAD,yBACE,KAAC,wBAAD,IADF,cAEE,MAAC,mBAAD,yBACE,KAAC,eAAD,kBAAqBH,KAArB,EADF,cAEE,KAAC,eAAD,kBAAqBA,KAArB,EAFF,GAFF,cAME,MAAC,sBAAD,yBACE,MAAC,0BAAD,yBACE,KAAC,UAAD,kBAAgBA,KAAhB,EADF,cAEE,KAAC,UAAD,kBAAgBA,KAAhB,EAFF,cAGE,KAAC,UAAD,kBAAgBA,KAAhB,EAHF,cAIE,KAAC,gBAAD,kBAAsBA,KAAtB,EAJF,cAKE,MAAC,gBAAD,YACGK,iBADH,OACyBD,eADzB,GALF,GADF,cAUE,MAAC,0BAAD,yBACE,KAAC,gBAAD,kBAAsBJ,KAAtB,EADF,cAEE,KAAC,UAAD,kBAAgBA,KAAhB,EAFF,GAVF,GANF,GADF,CAwBD,CA7BD,CA+BA,cAAeD,CAAAA,UAAf","sourcesContent":["import * as React from \"react\";\nimport FragmentControl from \"./FragmentControl\";\nimport EditButton from \"./EditButton\";\nimport VolumeMenuButton from \"./VolumeMenuButton\";\nimport { BackButton, NextButton } from \"./PlaylistButtons\";\nimport FullscreenToggle from \"./FullscreenToggle\";\nimport PlayToggle from \"./PlayToggle\";\nimport ProgressControl from \"./ProgressControl\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\nimport {\n  ControlBarStyled,\n  ControlBarGradientStyled,\n  ControlBarBottomStyled,\n  ControlBarBottomSideStyled,\n  ControlBarTopStyled,\n  TextPlayerStyled\n} from \"./styles\";\nimport { formatTime } from \"../../utils\";\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nconst ControlBar: React.SFC<IProps> = props => {\n  const { currentTime, duration } = props.provider;\n  const totalTimeFormat = formatTime(duration);\n  const currentTimeFormat = formatTime(currentTime, duration);\n\n  return (\n    <ControlBarStyled>\n      <ControlBarGradientStyled />\n      <ControlBarTopStyled>\n        <ProgressControl {...props} />\n        <FragmentControl {...props} />\n      </ControlBarTopStyled>\n      <ControlBarBottomStyled>\n        <ControlBarBottomSideStyled>\n          <BackButton {...props} />\n          <PlayToggle {...props} />\n          <NextButton {...props} />\n          <VolumeMenuButton {...props} />\n          <TextPlayerStyled>\n            {currentTimeFormat} / {totalTimeFormat}\n          </TextPlayerStyled>\n        </ControlBarBottomSideStyled>\n        <ControlBarBottomSideStyled>\n          <FullscreenToggle {...props} />\n          <EditButton {...props} />\n        </ControlBarBottomSideStyled>\n      </ControlBarBottomStyled>\n    </ControlBarStyled>\n  );\n};\n\nexport default ControlBar;\n"]},"metadata":{},"sourceType":"module"}