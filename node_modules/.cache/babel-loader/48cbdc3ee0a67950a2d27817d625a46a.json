{"ast":null,"code":"import*as React from\"react\";import{EditButtonStyled}from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditButton=function EditButton(props){var handleClick=function handleClick(){props.editing(true);};var handleCancel=function handleCancel(){props.editing(false);};var handleSave=function handleSave(){var editing=props.editing,onChangeTimeFragment=props.onChangeTimeFragment,_props$provider=props.provider,editMin=_props$provider.editMin,editMax=_props$provider.editMax;if(onChangeTimeFragment){onChangeTimeFragment(editMin,editMax);}editing(false);};var editActive=props.provider.editActive;return editActive?/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(EditButtonStyled,{onClick:handleCancel,editActive:editActive,tabIndex:0,children:\"Cancel\"}),/*#__PURE__*/_jsx(EditButtonStyled,{onClick:handleSave,editActive:editActive,tabIndex:0,children:\"Save\"})]}):/*#__PURE__*/_jsx(EditButtonStyled,{onClick:handleClick,editActive:editActive,tabIndex:0,children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-crop\"})});};export default EditButton;","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/EditButton.tsx"],"names":["React","EditButtonStyled","EditButton","props","handleClick","editing","handleCancel","handleSave","onChangeTimeFragment","provider","editMin","editMax","editActive"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAIA,OAASC,gBAAT,KAAiC,UAAjC,C,wFAMA,GAAMC,CAAAA,UAA6B,CAAG,QAAhCA,CAAAA,UAAgC,CAAAC,KAAK,CAAI,CAC7C,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,KAAK,CAACE,OAAN,CAAc,IAAd,EACD,CAFD,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBH,KAAK,CAACE,OAAN,CAAc,KAAd,EACD,CAFD,CAIA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GACEF,CAAAA,OADF,CAIIF,KAJJ,CACEE,OADF,CAEEG,oBAFF,CAIIL,KAJJ,CAEEK,oBAFF,iBAIIL,KAJJ,CAGEM,QAHF,CAGcC,OAHd,iBAGcA,OAHd,CAGuBC,OAHvB,iBAGuBA,OAHvB,CAMA,GAAIH,oBAAJ,CAA0B,CACxBA,oBAAoB,CAACE,OAAD,CAAUC,OAAV,CAApB,CACD,CACDN,OAAO,CAAC,KAAD,CAAP,CACD,CAXD,CAaA,GAAQO,CAAAA,UAAR,CAAuBT,KAAK,CAACM,QAA7B,CAAQG,UAAR,CACA,MAAOA,CAAAA,UAAU,cACf,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,gBAAD,EACE,OAAO,CAAEN,YADX,CAEE,UAAU,CAAEM,UAFd,CAGE,QAAQ,CAAE,CAHZ,oBADF,cAQE,KAAC,gBAAD,EACE,OAAO,CAAEL,UADX,CAEE,UAAU,CAAEK,UAFd,CAGE,QAAQ,CAAE,CAHZ,kBARF,GADe,cAkBf,KAAC,gBAAD,EACE,OAAO,CAAER,WADX,CAEE,UAAU,CAAEQ,UAFd,CAGE,QAAQ,CAAE,CAHZ,uBAKE,UAAG,SAAS,CAAC,aAAb,EALF,EAlBF,CA0BD,CAhDD,CAkDA,cAAeV,CAAAA,UAAf","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\nimport { EditButtonStyled } from \"./styles\";\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nconst EditButton: React.SFC<IProps> = props => {\n  const handleClick = () => {\n    props.editing(true);\n  };\n  const handleCancel = () => {\n    props.editing(false);\n  };\n\n  const handleSave = () => {\n    const {\n      editing,\n      onChangeTimeFragment,\n      provider: { editMin, editMax }\n    } = props;\n\n    if (onChangeTimeFragment) {\n      onChangeTimeFragment(editMin, editMax);\n    }\n    editing(false);\n  };\n\n  const { editActive } = props.provider;\n  return editActive ? (\n    <React.Fragment>\n      <EditButtonStyled\n        onClick={handleCancel}\n        editActive={editActive}\n        tabIndex={0}\n      >\n        Cancel\n      </EditButtonStyled>\n      <EditButtonStyled\n        onClick={handleSave}\n        editActive={editActive}\n        tabIndex={0}\n      >\n        Save\n      </EditButtonStyled>\n    </React.Fragment>\n  ) : (\n    <EditButtonStyled\n      onClick={handleClick}\n      editActive={editActive}\n      tabIndex={0}\n    >\n      <i className=\"fas fa-crop\" />\n    </EditButtonStyled>\n  );\n};\n\nexport default EditButton;\n"]},"metadata":{},"sourceType":"module"}