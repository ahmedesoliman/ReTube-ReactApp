{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\retube-reactApp\\\\src\\\\components\\\\FullVideo\\\\VolumeMenuButton.tsx\";\nimport * as React from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport { VolumeIcon, VolumenMenuButtonStyled, VolumenMenuWrapperStyled } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n_c = SliderWithTooltip;\n\nfunction tipFormatter(value) {\n  return value + \"%\";\n}\n\nexport default class VolumenMenuButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 100\n    };\n    this.props = void 0;\n\n    this.handleChange = value => {\n      this.setState({\n        value\n      });\n      this.props.video.volume = value ? value / 100 : value;\n      this.checkMuted();\n    };\n\n    this.handleClickVolume = () => {\n      if (this.state.value > 1) {\n        this.handleChange(0);\n      } else {\n        this.handleChange(100);\n      }\n    };\n  }\n\n  setState(arg0) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  get value() {\n    const {\n      value\n    } = this.state;\n\n    if (!this.props.video) {\n      return value;\n    }\n\n    return this.props.video.volume * 100;\n  }\n\n  checkMuted() {\n    const {\n      video\n    } = this.props;\n\n    if (video.volume === 0) {\n      video.muted = true;\n    } else {\n      video.muted = false;\n    }\n  }\n\n  classVolumeIcon() {\n    const volume = this.value;\n    let variant;\n\n    if (volume > 70) {\n      variant = \"volume-up\";\n    } else if (volume > 20) {\n      variant = \"volume-down\";\n    } else {\n      variant = \"volume-off\";\n    }\n\n    return \"fas fa-\" + variant;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(VolumenMenuWrapperStyled, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.handleClickVolume,\n        children: /*#__PURE__*/_jsxDEV(VolumeIcon, {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: this.classVolumeIcon()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VolumenMenuButtonStyled, {\n        tabIndex: 0,\n        children: /*#__PURE__*/_jsxDEV(SliderWithTooltip, {\n          max: 100,\n          className: \"mark-volume\",\n          tipFormatter: tipFormatter,\n          value: this.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderWithTooltip\");","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/VolumeMenuButton.tsx"],"names":["React","Slider","createSliderWithTooltip","VolumeIcon","VolumenMenuButtonStyled","VolumenMenuWrapperStyled","SliderWithTooltip","tipFormatter","value","VolumenMenuButton","Component","state","props","handleChange","setState","video","volume","checkMuted","handleClickVolume","arg0","Error","muted","classVolumeIcon","variant","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromPlayer } from \"./FullVideo\";\n\nimport {\n  VolumeIcon,\n  VolumenMenuButtonStyled,\n  VolumenMenuWrapperStyled,\n} from \"./styles\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\ninterface IState {\n  value: number;\n}\n\ninterface IProps extends IPropsFromPlayer {\n  video: Video;\n}\n\nfunction tipFormatter(value) {\n  return value + \"%\";\n}\n\nexport default class VolumenMenuButton extends React.Component<IProps, IState> {\n  setState(arg0: { value: any }) {\n    throw new Error(\"Method not implemented.\");\n  }\n  public state = {\n    value: 100,\n  };\n  props: any;\n\n  get value() {\n    const { value } = this.state;\n    if (!this.props.video) {\n      return value;\n    }\n    return this.props.video.volume * 100;\n  }\n\n  public handleChange = (value: any) => {\n    this.setState({ value });\n    this.props.video.volume = value ? value / 100 : value;\n    this.checkMuted();\n  };\n\n  public checkMuted() {\n    const { video } = this.props;\n    if (video.volume === 0) {\n      video.muted = true;\n    } else {\n      video.muted = false;\n    }\n  }\n\n  public classVolumeIcon() {\n    const volume = this.value;\n    let variant;\n    if (volume > 70) {\n      variant = \"volume-up\";\n    } else if (volume > 20) {\n      variant = \"volume-down\";\n    } else {\n      variant = \"volume-off\";\n    }\n    return \"fas fa-\" + variant;\n  }\n\n  public handleClickVolume = () => {\n    if (this.state.value > 1) {\n      this.handleChange(0);\n    } else {\n      this.handleChange(100);\n    }\n  };\n\n  public render() {\n    return (\n      <VolumenMenuWrapperStyled>\n        <div onClick={this.handleClickVolume}>\n          <VolumeIcon>\n            <i className={this.classVolumeIcon()} />\n          </VolumeIcon>\n        </div>\n        <VolumenMenuButtonStyled tabIndex={0}>\n          <SliderWithTooltip\n            max={100}\n            className=\"mark-volume\"\n            tipFormatter={tipFormatter}\n            value={this.value}\n            onChange={this.handleChange}\n          />\n        </VolumenMenuButtonStyled>\n      </VolumenMenuWrapperStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}