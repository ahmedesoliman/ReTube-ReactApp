{"ast":null,"code":"import _classCallCheck from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import Slider,{createSliderWithTooltip}from\"rc-slider\";import{ProgressControlStyled}from\"./styles\";import{convertToTimeRange,convertToTime,formatTooltipRange}from\"../../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SliderWithTooltip=createSliderWithTooltip(Slider);var PlayToggle=/*#__PURE__*/function(_React$Component){_inherits(PlayToggle,_React$Component);var _super=_createSuper(PlayToggle);function PlayToggle(){var _this;_classCallCheck(this,PlayToggle);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={changed:false,value:1000};_this.handleChange=function(value){_this.setState({changed:true,value:value});};_this.handleChangeComplete=function(value){var _this$props=_this.props,duration=_this$props.provider.duration,_this$props$currentVi=_this$props.currentVideoClip,startTime=_this$props$currentVi.startTime,endTime=_this$props$currentVi.endTime;var selectedTime=convertToTime(value,duration);var seekTime;if(selectedTime>=startTime&&selectedTime<=endTime){seekTime=selectedTime;}else if(selectedTime<startTime){seekTime=startTime;}else if(selectedTime>endTime){seekTime=endTime;}_this.props.video.seek(seekTime);_this.setState({changed:false,value:value});};return _this;}_createClass(PlayToggle,[{key:\"slideTime\",value:function slideTime(){var _this$props$provider=this.props.provider,currentTime=_this$props$provider.currentTime,duration=_this$props$provider.duration;if(this.state.changed){return this.state.value;}if(isNaN(duration)||duration===0){return 0;}return convertToTimeRange(currentTime,duration);}},{key:\"render\",value:function render(){var _this$props2=this.props,_this$props2$provider=_this$props2.provider,duration=_this$props2$provider.duration,editActive=_this$props2$provider.editActive,_this$props2$currentV=_this$props2.currentVideoClip,startTime=_this$props2$currentV.startTime,endTime=_this$props2$currentV.endTime;return/*#__PURE__*/_jsxs(ProgressControlStyled,{show:editActive&&duration,children:[/*#__PURE__*/_jsx(Slider,{max:1000,className:\"mark mark-start\",value:convertToTimeRange(startTime,duration)}),/*#__PURE__*/_jsx(Slider,{max:1000,className:\"mark mark-end\",value:convertToTimeRange(endTime,duration)}),/*#__PURE__*/_jsx(SliderWithTooltip,{className:\"mark-progress\",max:1000,value:this.slideTime(),tipFormatter:formatTooltipRange(duration),onChange:this.handleChange,onAfterChange:this.handleChangeComplete})]});}}]);return PlayToggle;}(React.Component);export{PlayToggle as default};","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/ProgressControl.tsx"],"names":["React","Slider","createSliderWithTooltip","ProgressControlStyled","convertToTimeRange","convertToTime","formatTooltipRange","SliderWithTooltip","PlayToggle","state","changed","value","handleChange","setState","handleChangeComplete","props","duration","provider","currentVideoClip","startTime","endTime","selectedTime","seekTime","video","seek","currentTime","isNaN","editActive","slideTime","Component"],"mappings":"gjBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAIA,MAAOC,CAAAA,MAAP,EAAiBC,uBAAjB,KAAgD,WAAhD,CACA,OAASC,qBAAT,KAAsC,UAAtC,CACA,OACEC,kBADF,CAEEC,aAFF,CAGEC,kBAHF,KAIO,aAJP,C,wFAMA,GAAMC,CAAAA,iBAAiB,CAAGL,uBAAuB,CAACD,MAAD,CAAjD,C,GAWqBO,CAAAA,U,uVACZC,K,CAAQ,CACbC,OAAO,CAAE,KADI,CAEbC,KAAK,CAAE,IAFM,C,OAgBRC,Y,CAAe,SAACD,KAAD,CAAmB,CACvC,MAAKE,QAAL,CAAc,CAAEH,OAAO,CAAE,IAAX,CAAiBC,KAAK,CAALA,KAAjB,CAAd,EACD,C,OAEMG,oB,CAAuB,SAACH,KAAD,CAAmB,CAC/C,gBAGI,MAAKI,KAHT,CACcC,QADd,aACEC,QADF,CACcD,QADd,mCAEEE,gBAFF,CAEsBC,SAFtB,uBAEsBA,SAFtB,CAEiCC,OAFjC,uBAEiCA,OAFjC,CAIA,GAAMC,CAAAA,YAAY,CAAGhB,aAAa,CAACM,KAAD,CAAQK,QAAR,CAAlC,CACA,GAAIM,CAAAA,QAAJ,CACA,GAAID,YAAY,EAAIF,SAAhB,EAA6BE,YAAY,EAAID,OAAjD,CAA0D,CACxDE,QAAQ,CAAGD,YAAX,CACD,CAFD,IAEO,IAAIA,YAAY,CAAGF,SAAnB,CAA8B,CACnCG,QAAQ,CAAGH,SAAX,CACD,CAFM,IAEA,IAAIE,YAAY,CAAGD,OAAnB,CAA4B,CACjCE,QAAQ,CAAGF,OAAX,CACD,CACD,MAAKL,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,CAAsBF,QAAtB,EACA,MAAKT,QAAL,CAAc,CAAEH,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAALA,KAAlB,CAAd,EACD,C,+DA/BD,oBAAmB,CACjB,yBAAkC,KAAKI,KAAL,CAAWE,QAA7C,CAAQQ,WAAR,sBAAQA,WAAR,CAAqBT,QAArB,sBAAqBA,QAArB,CACA,GAAI,KAAKP,KAAL,CAAWC,OAAf,CAAwB,CACtB,MAAO,MAAKD,KAAL,CAAWE,KAAlB,CACD,CACD,GAAIe,KAAK,CAACV,QAAD,CAAL,EAAmBA,QAAQ,GAAK,CAApC,CAAuC,CACrC,MAAO,EAAP,CACD,CACD,MAAOZ,CAAAA,kBAAkB,CAACqB,WAAD,CAAcT,QAAd,CAAzB,CACD,C,sBAwBD,iBAAgB,CACd,iBAGI,KAAKD,KAHT,oCACEE,QADF,CACcD,QADd,uBACcA,QADd,CACwBW,UADxB,uBACwBA,UADxB,oCAEET,gBAFF,CAEsBC,SAFtB,uBAEsBA,SAFtB,CAEiCC,OAFjC,uBAEiCA,OAFjC,CAKA,mBACE,MAAC,qBAAD,EAAuB,IAAI,CAAEO,UAAU,EAAIX,QAA3C,wBACE,KAAC,MAAD,EACE,GAAG,CAAE,IADP,CAEE,SAAS,CAAC,iBAFZ,CAGE,KAAK,CAAEZ,kBAAkB,CAACe,SAAD,CAAYH,QAAZ,CAH3B,EADF,cAME,KAAC,MAAD,EACE,GAAG,CAAE,IADP,CAEE,SAAS,CAAC,eAFZ,CAGE,KAAK,CAAEZ,kBAAkB,CAACgB,OAAD,CAAUJ,QAAV,CAH3B,EANF,cAWE,KAAC,iBAAD,EACE,SAAS,CAAC,eADZ,CAEE,GAAG,CAAE,IAFP,CAGE,KAAK,CAAE,KAAKY,SAAL,EAHT,CAIE,YAAY,CAAEtB,kBAAkB,CAACU,QAAD,CAJlC,CAKE,QAAQ,CAAE,KAAKJ,YALjB,CAME,aAAa,CAAE,KAAKE,oBANtB,EAXF,GADF,CAsBD,C,wBAnEqCd,KAAK,CAAC6B,S,SAAzBrB,U","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport { ProgressControlStyled } from \"./styles\";\nimport {\n  convertToTimeRange,\n  convertToTime,\n  formatTooltipRange\n} from \"../../utils\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\ninterface IState {\n  changed: boolean;\n  value: number;\n}\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nexport default class PlayToggle extends React.Component<IProps, IState> {\n  public state = {\n    changed: false,\n    value: 1000\n  };\n\n  public slideTime() {\n    const { currentTime, duration } = this.props.provider;\n    if (this.state.changed) {\n      return this.state.value;\n    }\n    if (isNaN(duration) || duration === 0) {\n      return 0;\n    }\n    return convertToTimeRange(currentTime, duration);\n  }\n\n  public handleChange = (value: number) => {\n    this.setState({ changed: true, value });\n  };\n\n  public handleChangeComplete = (value: number) => {\n    const {\n      provider: { duration },\n      currentVideoClip: { startTime, endTime }\n    } = this.props;\n    const selectedTime = convertToTime(value, duration);\n    let seekTime;\n    if (selectedTime >= startTime && selectedTime <= endTime) {\n      seekTime = selectedTime;\n    } else if (selectedTime < startTime) {\n      seekTime = startTime;\n    } else if (selectedTime > endTime) {\n      seekTime = endTime;\n    }\n    this.props.video.seek(seekTime);\n    this.setState({ changed: false, value });\n  };\n\n  public render() {\n    const {\n      provider: { duration, editActive },\n      currentVideoClip: { startTime, endTime }\n    } = this.props;\n\n    return (\n      <ProgressControlStyled show={editActive && duration}>\n        <Slider\n          max={1000}\n          className=\"mark mark-start\"\n          value={convertToTimeRange(startTime, duration)}\n        />\n        <Slider\n          max={1000}\n          className=\"mark mark-end\"\n          value={convertToTimeRange(endTime, duration)}\n        />\n        <SliderWithTooltip\n          className=\"mark-progress\"\n          max={1000}\n          value={this.slideTime()}\n          tipFormatter={formatTooltipRange(duration)}\n          onChange={this.handleChange}\n          onAfterChange={this.handleChangeComplete}\n        />\n      </ProgressControlStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}