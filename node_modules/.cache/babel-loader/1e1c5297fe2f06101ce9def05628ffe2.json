{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\todolist-react\\\\src\\\\components\\\\FullVideo\\\\EditButton.tsx\";\nimport * as React from \"react\";\nimport { EditButtonStyled } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditButton = props => {\n  const handleClick = () => {\n    props.editing(true);\n  };\n\n  const handleCancel = () => {\n    props.editing(false);\n  };\n\n  const handleSave = () => {\n    const {\n      editing,\n      onChangeTimeFragment,\n      provider: {\n        editMin,\n        editMax\n      }\n    } = props;\n\n    if (onChangeTimeFragment) {\n      onChangeTimeFragment(editMin, editMax);\n    }\n\n    editing(false);\n  };\n\n  const {\n    editActive\n  } = props.provider;\n  return editActive ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditButtonStyled, {\n      onClick: handleCancel,\n      editActive: editActive,\n      tabIndex: 0,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonStyled, {\n      onClick: handleSave,\n      editActive: editActive,\n      tabIndex: 0,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(EditButtonStyled, {\n    onClick: handleClick,\n    editActive: editActive,\n    tabIndex: 0,\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditButton;\nexport default EditButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditButton\");","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/components/FullVideo/EditButton.tsx"],"names":["React","EditButtonStyled","EditButton","props","handleClick","editing","handleCancel","handleSave","onChangeTimeFragment","provider","editMin","editMax","editActive"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SAASC,gBAAT,QAAiC,UAAjC;;;AAMA,MAAMC,UAA6B,GAAGC,KAAK,IAAI;AAC7C,QAAMC,WAAW,GAAG,MAAM;AACxBD,IAAAA,KAAK,CAACE,OAAN,CAAc,IAAd;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBH,IAAAA,KAAK,CAACE,OAAN,CAAc,KAAd;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvB,UAAM;AACJF,MAAAA,OADI;AAEJG,MAAAA,oBAFI;AAGJC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX;AAHN,QAIFR,KAJJ;;AAMA,QAAIK,oBAAJ,EAA0B;AACxBA,MAAAA,oBAAoB,CAACE,OAAD,EAAUC,OAAV,CAApB;AACD;;AACDN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAXD;;AAaA,QAAM;AAAEO,IAAAA;AAAF,MAAiBT,KAAK,CAACM,QAA7B;AACA,SAAOG,UAAU,gBACf,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAEN,YADX;AAEE,MAAA,UAAU,EAAEM,UAFd;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAEL,UADX;AAEE,MAAA,UAAU,EAAEK,UAFd;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADe,gBAkBf,QAAC,gBAAD;AACE,IAAA,OAAO,EAAER,WADX;AAEE,IAAA,UAAU,EAAEQ,UAFd;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAAA,2BAKE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UAlBF;AA0BD,CAhDD;;KAAMV,U;AAkDN,eAAeA,UAAf","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\nimport { EditButtonStyled } from \"./styles\";\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nconst EditButton: React.SFC<IProps> = props => {\n  const handleClick = () => {\n    props.editing(true);\n  };\n  const handleCancel = () => {\n    props.editing(false);\n  };\n\n  const handleSave = () => {\n    const {\n      editing,\n      onChangeTimeFragment,\n      provider: { editMin, editMax }\n    } = props;\n\n    if (onChangeTimeFragment) {\n      onChangeTimeFragment(editMin, editMax);\n    }\n    editing(false);\n  };\n\n  const { editActive } = props.provider;\n  return editActive ? (\n    <React.Fragment>\n      <EditButtonStyled\n        onClick={handleCancel}\n        editActive={editActive}\n        tabIndex={0}\n      >\n        Cancel\n      </EditButtonStyled>\n      <EditButtonStyled\n        onClick={handleSave}\n        editActive={editActive}\n        tabIndex={0}\n      >\n        Save\n      </EditButtonStyled>\n    </React.Fragment>\n  ) : (\n    <EditButtonStyled\n      onClick={handleClick}\n      editActive={editActive}\n      tabIndex={0}\n    >\n      <i className=\"fas fa-crop\" />\n    </EditButtonStyled>\n  );\n};\n\nexport default EditButton;\n"]},"metadata":{},"sourceType":"module"}