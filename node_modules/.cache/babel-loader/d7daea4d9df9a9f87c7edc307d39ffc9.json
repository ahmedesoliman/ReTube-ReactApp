{"ast":null,"code":"export const isiOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\nexport const isMobile = window.innerWidth <= 768;\nexport const showSpinnerNextVideo = (currentTime, endTime, duration, autoPlaylist) => {\n  const fixEndTime = endTime > duration ? duration : endTime;\n  return currentTime >= fixEndTime && duration !== 0 && autoPlaylist;\n};\nexport const findVideoClipIndexForId = (playlist, id) => {\n  for (let i = 0; i < playlist.length; i++) {\n    if (playlist[i].id === id) {\n      return i;\n    }\n  }\n\n  return null;\n};\nexport const findVideoClipForId = (playlist, id) => {\n  return playlist[findVideoClipIndexForId(playlist, id)];\n};\nexport const isTypeEqual = (component1, component2) => {\n  const type1 = component1.type;\n  const type2 = component2.type;\n\n  if (typeof type1 === \"string\" || typeof type2 === \"string\") {\n    return type1 === type2;\n  }\n\n  if (typeof type1 === \"function\") {\n    return type1 === component2;\n  }\n\n  return false;\n};\nexport function formatTime(secondsParam = 0, guide = secondsParam) {\n  let seconds = Math.floor(secondsParam % 60);\n  let minutes = Math.floor(secondsParam / 60 % 60);\n  let hours = Math.floor(secondsParam / 3600);\n  const guideMinutes = Math.floor(guide / 60 % 60);\n  const guideHours = Math.floor(guide / 3600);\n\n  if (isNaN(secondsParam) || secondsParam === Infinity) {\n    hours = minutes = seconds = \"-\";\n  }\n\n  hours = hours > 0 || guideHours > 0 ? hours < 10 ? `0${hours}:` : `${hours}:` : \"\";\n  minutes = `${(hours || guideMinutes >= 10) && minutes < 10 ? `0${minutes}` : minutes}:`;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n  return hours + minutes + seconds;\n}\nexport const arrayShuffle = array => {\n  let currentIndex = array.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\nexport function setStorage(key, value) {\n  if (key && typeof value !== \"undefined\") {\n    window.localStorage[key] = JSON.stringify(value);\n  }\n}\nexport function getStorage(key) {\n  const value = window.localStorage[key];\n  return value ? JSON.parse(value) : undefined;\n}\nexport function cleanDeprecatedStorage(name, version) {\n  Object.keys(window.localStorage).filter(keyStore => keyStore.indexOf(name) > -1 && keyStore.indexOf(version) === -1).forEach(key => {\n    delete window.localStorage[key];\n  });\n}\nexport function copy(ob) {\n  return JSON.parse(JSON.stringify(ob));\n}\nexport function convertToTimeRange(time, duration) {\n  if (isNaN(duration) || duration === 0) {\n    return 0;\n  }\n\n  return Math.round(time) * 1000 / Math.round(duration);\n}\nexport function convertToTime(time, duration = 0) {\n  return Math.round(Math.round(time) * Math.round(duration) / 1000);\n}\nexport const formatTooltipRange = duration => time => {\n  return formatTime(convertToTime(time, duration));\n};\nexport const getRandomArray = arr => {\n  return Math.floor(Math.random() * arr.length);\n};\nexport const getPlaylistActions = (index, playlist, repeat, random) => {\n  let nextVideoClip;\n  let backVideoClip;\n  let currentVideoClip;\n\n  if (index !== null) {\n    if (random) {\n      const newPlaylist = playlist.filter((videoClip, indexVideo) => index !== indexVideo);\n      nextVideoClip = newPlaylist[getRandomArray(newPlaylist)];\n    } else {\n      nextVideoClip = playlist[index + 1];\n      backVideoClip = playlist[index - 1];\n\n      if (repeat && !nextVideoClip) {\n        nextVideoClip = playlist[0];\n      }\n    }\n\n    currentVideoClip = playlist[index];\n    return {\n      backVideoClip,\n      currentVideoClip,\n      nextVideoClip\n    };\n  }\n\n  return {};\n};","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/utils/index.ts"],"names":["isiOS","navigator","platform","test","isMobile","window","innerWidth","showSpinnerNextVideo","currentTime","endTime","duration","autoPlaylist","fixEndTime","findVideoClipIndexForId","playlist","id","i","length","findVideoClipForId","isTypeEqual","component1","component2","type1","type","type2","formatTime","secondsParam","guide","seconds","Math","floor","minutes","hours","guideMinutes","guideHours","isNaN","Infinity","arrayShuffle","array","currentIndex","temporaryValue","randomIndex","random","setStorage","key","value","localStorage","JSON","stringify","getStorage","parse","undefined","cleanDeprecatedStorage","name","version","Object","keys","filter","keyStore","indexOf","forEach","copy","ob","convertToTimeRange","time","round","convertToTime","formatTooltipRange","getRandomArray","arr","getPlaylistActions","index","repeat","nextVideoClip","backVideoClip","currentVideoClip","newPlaylist","videoClip","indexVideo"],"mappings":"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","sourcesContent":["import { IVideoClip } from \"../components/types\";\n\nexport const isiOS =\n  !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\nexport const isMobile = window.innerWidth <= 768;\n\nexport const showSpinnerNextVideo = (\n  currentTime,\n  endTime,\n  duration,\n  autoPlaylist\n) => {\n  const fixEndTime = endTime > duration ? duration : endTime;\n  return currentTime >= fixEndTime && duration !== 0 && autoPlaylist;\n};\n\nexport const findVideoClipIndexForId = (\n  playlist: IVideoClip[],\n  id: string\n): any => {\n  for (let i = 0; i < playlist.length; i++) {\n    if (playlist[i].id === id) {\n      return i;\n    }\n  }\n  return null;\n};\n\nexport const findVideoClipForId = (playlist: IVideoClip[], id): IVideoClip => {\n  return playlist[findVideoClipIndexForId(playlist, id)];\n};\n\nexport const isTypeEqual = (component1, component2) => {\n  const type1 = component1.type;\n  const type2 = component2.type;\n\n  if (typeof type1 === \"string\" || typeof type2 === \"string\") {\n    return type1 === type2;\n  }\n\n  if (typeof type1 === \"function\") {\n    return type1 === component2;\n  }\n\n  return false;\n};\n\nexport function formatTime(secondsParam = 0, guide = secondsParam) {\n  let seconds: any = Math.floor(secondsParam % 60);\n  let minutes: any = Math.floor((secondsParam / 60) % 60);\n  let hours: any = Math.floor(secondsParam / 3600);\n  const guideMinutes = Math.floor((guide / 60) % 60);\n  const guideHours = Math.floor(guide / 3600);\n\n  if (isNaN(secondsParam) || secondsParam === Infinity) {\n    hours = minutes = seconds = \"-\";\n  }\n\n  hours =\n    hours > 0 || guideHours > 0\n      ? hours < 10\n        ? `0${hours}:`\n        : `${hours}:`\n      : \"\";\n\n  minutes = `${\n    (hours || guideMinutes >= 10) && minutes < 10 ? `0${minutes}` : minutes\n  }:`;\n\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  return hours + minutes + seconds;\n}\n\nexport const arrayShuffle = array => {\n  let currentIndex = array.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nexport function setStorage(key, value) {\n  if (key && typeof value !== \"undefined\") {\n    window.localStorage[key] = JSON.stringify(value);\n  }\n}\n\nexport function getStorage(key) {\n  const value = window.localStorage[key];\n\n  return value ? JSON.parse(value) : undefined;\n}\n\nexport function cleanDeprecatedStorage(name, version) {\n  Object.keys(window.localStorage)\n    .filter(\n      keyStore =>\n        keyStore.indexOf(name) > -1 && keyStore.indexOf(version) === -1\n    )\n    .forEach((key: any) => {\n      delete window.localStorage[key];\n    });\n}\n\nexport function copy(ob: any) {\n  return JSON.parse(JSON.stringify(ob));\n}\n\nexport function convertToTimeRange(time, duration) {\n  if (isNaN(duration) || duration === 0) {\n    return 0;\n  }\n  return (Math.round(time) * 1000) / Math.round(duration);\n}\n\nexport function convertToTime(time, duration = 0) {\n  return Math.round((Math.round(time) * Math.round(duration)) / 1000);\n}\n\nexport const formatTooltipRange = (duration: number) => time => {\n  return formatTime(convertToTime(time, duration));\n};\n\nexport const getRandomArray = (arr: any[]) => {\n  return Math.floor(Math.random() * arr.length);\n};\n\nexport const getPlaylistActions = (\n  index: number,\n  playlist: IVideoClip[],\n  repeat: boolean,\n  random: boolean\n): {\n  currentVideoClip?: IVideoClip;\n  backVideoClip?: IVideoClip;\n  nextVideoClip?: IVideoClip;\n} => {\n  let nextVideoClip;\n  let backVideoClip;\n  let currentVideoClip;\n\n  if (index !== null) {\n    if (random) {\n      const newPlaylist = playlist.filter(\n        (videoClip, indexVideo) => index !== indexVideo\n      );\n\n      nextVideoClip = newPlaylist[getRandomArray(newPlaylist)];\n    } else {\n      nextVideoClip = playlist[index + 1];\n      backVideoClip = playlist[index - 1];\n\n      if (repeat && !nextVideoClip) {\n        nextVideoClip = playlist[0];\n      }\n    }\n\n    currentVideoClip = playlist[index];\n    return {\n      backVideoClip,\n      currentVideoClip,\n      nextVideoClip\n    };\n  }\n  return {};\n};\n"]},"metadata":{},"sourceType":"module"}