{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\todolist-react\\\\src\\\\screens\\\\Edit\\\\Edit.tsx\";\nimport * as React from \"react\";\nimport EditForm from \"./EditForm\";\nimport { CardStyled, ContentStyled, PageStyled, TitlePageStyled } from \"../../components\";\nimport AppProvider from \"../../AppProvider\";\nimport { findVideoClipIndexForId } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleSuccess = playlist => {\n      const {\n        setVideoClip,\n        addVideoClip\n      } = this.props;\n      const {\n        id\n      } = this.props.match.params;\n\n      if (id) {\n        setVideoClip(id, playlist);\n      } else {\n        addVideoClip(playlist);\n      }\n    };\n  }\n\n  render() {\n    const {\n      playlist,\n      history\n    } = this.props;\n    const {\n      id\n    } = this.props.match.params;\n    let index;\n\n    if (id) {\n      index = findVideoClipIndexForId(playlist, id);\n    }\n\n    const existsIndex = index !== undefined;\n    return /*#__PURE__*/_jsxDEV(PageStyled, {\n      children: /*#__PURE__*/_jsxDEV(ContentStyled, {\n        children: /*#__PURE__*/_jsxDEV(CardStyled, {\n          children: [/*#__PURE__*/_jsxDEV(TitlePageStyled, {\n            children: id ? \"Edit video\" : \"Add to playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditForm, {\n            playlist: existsIndex ? playlist[index] : undefined,\n            history: history,\n            onSuccess: this.handleSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default (props => /*#__PURE__*/_jsxDEV(AppProvider.Consumer, {\n  children: value => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n    ...value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 31\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/screens/Edit/Edit.tsx"],"names":["React","EditForm","CardStyled","ContentStyled","PageStyled","TitlePageStyled","AppProvider","findVideoClipIndexForId","Edit","Component","state","handleSuccess","playlist","setVideoClip","addVideoClip","props","id","match","params","render","history","index","existsIndex","undefined","value"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,eAJF,QAMO,kBANP;AAOA,OAAOC,WAAP,MAA0C,mBAA1C;AACA,SAASC,uBAAT,QAAwC,aAAxC;;;AAUA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAA2C;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B,EAD0B;;AAAA,SAGlCC,aAHkC,GAGjBC,QAAD,IAA0B;AAC/C,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAiC,KAAKC,KAA5C;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAhC;;AAEA,UAAIF,EAAJ,EAAQ;AACNH,QAAAA,YAAY,CAACG,EAAD,EAAKJ,QAAL,CAAZ;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,CAACF,QAAD,CAAZ;AACD;AACF,KAZwC;AAAA;;AAclCO,EAAAA,MAAM,GAAG;AACd,UAAM;AAAEP,MAAAA,QAAF;AAAYQ,MAAAA;AAAZ,QAAwB,KAAKL,KAAnC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAhC;AACA,QAAIG,KAAJ;;AACA,QAAIL,EAAJ,EAAQ;AACNK,MAAAA,KAAK,GAAGd,uBAAuB,CAACK,QAAD,EAAWI,EAAX,CAA/B;AACD;;AACD,UAAMM,WAAW,GAAGD,KAAK,KAAKE,SAA9B;AAEA,wBACE,QAAC,UAAD;AAAA,6BACE,QAAC,aAAD;AAAA,+BACE,QAAC,UAAD;AAAA,kCACE,QAAC,eAAD;AAAA,sBACGP,EAAE,GAAG,YAAH,GAAkB;AADvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,QAAD;AACE,YAAA,QAAQ,EAAEM,WAAW,GAAGV,QAAQ,CAACS,KAAD,CAAX,GAAqBE,SAD5C;AAEE,YAAA,OAAO,EAAEH,OAFX;AAGE,YAAA,SAAS,EAAE,KAAKT;AAHlB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAvCwC;;AA0C3C,gBAAgBI,KAAD,iBACb,QAAC,WAAD,CAAa,QAAb;AAAA,YACIS,KAAD,iBAAyB,QAAC,IAAD,OAAUT,KAAV;AAAA,OAAqBS;AAArB;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport EditForm from \"./EditForm\";\nimport {\n  CardStyled,\n  ContentStyled,\n  PageStyled,\n  TitlePageStyled,\n  IVideoClip\n} from \"../../components\";\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\nimport { findVideoClipIndexForId } from \"../../utils\";\n\ninterface IRouterProps {\n  id?: string;\n}\n\ninterface IProps\n  extends IAppProvider,\n    RouteComponentProps<IRouterProps> {}\n\nclass Edit extends React.Component<IProps> {\n  public state = {};\n\n  public handleSuccess = (playlist: IVideoClip) => {\n    const { setVideoClip, addVideoClip } = this.props;\n    const { id } = this.props.match.params;\n\n    if (id) {\n      setVideoClip(id, playlist);\n    } else {\n      addVideoClip(playlist);\n    }\n  };\n\n  public render() {\n    const { playlist, history } = this.props;\n    const { id } = this.props.match.params;\n    let index;\n    if (id) {\n      index = findVideoClipIndexForId(playlist, id);\n    }\n    const existsIndex = index !== undefined;\n\n    return (\n      <PageStyled>\n        <ContentStyled>\n          <CardStyled>\n            <TitlePageStyled>\n              {id ? \"Edit video\" : \"Add to playlist\"}\n            </TitlePageStyled>\n            <EditForm\n              playlist={existsIndex ? playlist[index] : undefined}\n              history={history}\n              onSuccess={this.handleSuccess}\n            />\n          </CardStyled>\n        </ContentStyled>\n      </PageStyled>\n    );\n  }\n}\n\nexport default (props: RouteComponentProps<IRouterProps>) => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <Edit {...props} {...value} />}\n  </AppProvider.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}