{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\todolist-react\\\\src\\\\components\\\\FullVideo\\\\LoadingSpinner.tsx\";\nimport * as React from \"react\";\nimport { LoadingSpinnerStyled, LoadingSpinnerContainer, LoadingSpinnerRotator, LoadingSpinnerLeft, LoadingSpinnerCircle, LoadingSpinnerRight } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingSpinner = ({\n  provider: {\n    waiting\n  }\n}) => /*#__PURE__*/_jsxDEV(LoadingSpinnerStyled, {\n  waiting: waiting,\n  children: /*#__PURE__*/_jsxDEV(LoadingSpinnerContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoadingSpinnerRotator, {\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinnerLeft, {\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinnerCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingSpinnerRight, {\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinnerCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\n_c = LoadingSpinner;\nexport default LoadingSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/components/FullVideo/LoadingSpinner.tsx"],"names":["React","LoadingSpinnerStyled","LoadingSpinnerContainer","LoadingSpinnerRotator","LoadingSpinnerLeft","LoadingSpinnerCircle","LoadingSpinnerRight","LoadingSpinner","provider","waiting"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,oBALF,EAMEC,mBANF,QAOO,UAPP;;;AAcA,MAAMC,cAAiC,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAAD,kBACxC,QAAC,oBAAD;AAAsB,EAAA,OAAO,EAAEA,OAA/B;AAAA,yBACE,QAAC,uBAAD;AAAA,2BACE,QAAC,qBAAD;AAAA,8BACE,QAAC,kBAAD;AAAA,+BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,mBAAD;AAAA,+BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,c;AAeN,eAAeA,cAAf","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\nimport {\n  LoadingSpinnerStyled,\n  LoadingSpinnerContainer,\n  LoadingSpinnerRotator,\n  LoadingSpinnerLeft,\n  LoadingSpinnerCircle,\n  LoadingSpinnerRight\n} from \"./styles\";\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nconst LoadingSpinner: React.SFC<IProps> = ({ provider: { waiting } }) => (\n  <LoadingSpinnerStyled waiting={waiting}>\n    <LoadingSpinnerContainer>\n      <LoadingSpinnerRotator>\n        <LoadingSpinnerLeft>\n          <LoadingSpinnerCircle />\n        </LoadingSpinnerLeft>\n        <LoadingSpinnerRight>\n          <LoadingSpinnerCircle />\n        </LoadingSpinnerRight>\n      </LoadingSpinnerRotator>\n    </LoadingSpinnerContainer>\n  </LoadingSpinnerStyled>\n);\n\nexport default LoadingSpinner;\n"]},"metadata":{},"sourceType":"module"}