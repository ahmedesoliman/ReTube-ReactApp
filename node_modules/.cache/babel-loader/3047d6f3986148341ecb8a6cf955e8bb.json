{"ast":null,"code":"import _classCallCheck from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{mediaProperties}from\"./consts\";import{showSpinnerNextVideo}from\"../../utils\";import{VideoStyled,VideoWrapperStyled}from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";var Video=/*#__PURE__*/function(_React$Component){_inherits(Video,_React$Component);var _super=_createSuper(Video);function Video(){var _this;_classCallCheck(this,Video);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.video=void 0;_this.play=function(){var _this$props=_this.props,_this$props$currentVi=_this$props.currentVideoClip,endTime=_this$props$currentVi.endTime,startTime=_this$props$currentVi.startTime,duration=_this$props.provider.duration;var fixEndTime=endTime>duration?duration:endTime;if(_this.video.currentTime>=fixEndTime||_this.video.currentTime<=startTime){_this.video.currentTime=startTime;}_this.video.play();};_this.pause=function(){_this.video.pause();};_this.togglePlay=function(){if(_this.video.paused){_this.play();}else{_this.pause();}};_this.seek=function(time){try{_this.video.currentTime=time;}catch(e){//\n}};_this.forward=function(seconds){var _this$props$currentVi2=_this.props.currentVideoClip,endTime=_this$props$currentVi2.endTime,startTime=_this$props$currentVi2.startTime;var finalCurrentTime=_this.video.currentTime+seconds;if(finalCurrentTime>=endTime){finalCurrentTime=startTime;}else if(finalCurrentTime<=startTime){finalCurrentTime=endTime;}_this.seek(finalCurrentTime);};_this.replay=function(seconds){_this.forward(-seconds);};_this.handleLoadStart=function(){var _this$props2=_this.props,onLoadStart=_this$props2.onLoadStart,startTime=_this$props2.currentVideoClip.startTime;onLoadStart(_this.getVideo());_this.video.currentTime=startTime||0;};_this.handleCanPlay=function(){_this.props.canPlay(_this.getVideo());};_this.handlePlaying=function(){_this.props.playing(_this.getVideo());};_this.handlePlay=function(){_this.props.play(_this.getVideo());};_this.handlePause=function(){_this.props.pause(_this.getVideo());};_this.handleDurationChange=function(){_this.props.reload(_this.getVideo());};_this.handleProgress=function(){if(_this.video){_this.props.reload(_this.getVideo());}};_this.handleEnded=function(){var end=_this.props.end;end(_this.getVideo());};_this.handleWaiting=function(){_this.props.waiting(_this.getVideo());};_this.handleSeeking=function(){_this.props.seeking(_this.getVideo());};_this.handleSeeked=function(){_this.props.seeked(_this.getVideo());};_this.handleEmptied=function(){_this.props.reload(_this.getVideo());};_this.handleLoadedMetaData=function(){var _this$props3=_this.props,startTime=_this$props3.currentVideoClip.startTime,reload=_this$props3.reload;if(startTime&&startTime>0){_this.video.currentTime=startTime;}reload(_this.getVideo());};_this.handleLoadedData=function(){_this.props.reload(_this.getVideo());};_this.handleTimeUpdate=function(){var _this$props4=_this.props,reload=_this$props4.reload,endTime=_this$props4.currentVideoClip.endTime;if(_this.video.currentTime>=endTime){_this.pause();}reload(_this.getVideo());};_this.handleVolumeChange=function(){_this.props.changeVolume(_this.getVideo());};return _this;}_createClass(Video,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){// Bug when try to repeat the same video with different id\nvar _this$props$currentVi3=this.props.currentVideoClip,id=_this$props$currentVi3.id,src=_this$props$currentVi3.src;if(nextProps.currentVideoClip.id!==id&&nextProps.currentVideoClip.src===src){this.video.currentTime=nextProps.currentVideoClip.startTime;this.play();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.volume=this.props.provider.volume;}},{key:\"getVideo\",value:function getVideo(){var _this2=this;if(!this.video){return null;}return mediaProperties.reduce(function(properties,key){properties[key]=_this2.video[key];return properties;},{});}},{key:\"muted\",get:function get(){return this.video.muted;},set:function set(val){this.video.muted=val;}},{key:\"volume\",get:function get(){return this.video.volume;},set:function set(val){if(val>1){val=1;}if(val<0){val=0;}this.video.volume=val;}},{key:\"render\",value:function render(){var _this3=this;var _this$props5=this.props,_this$props5$autoPlay=_this$props5.autoPlay,autoPlay=_this$props5$autoPlay===void 0?false:_this$props5$autoPlay,_this$props5$currentV=_this$props5.currentVideoClip,src=_this$props5$currentV.src,endTime=_this$props5$currentV.endTime,autoPlaylist=_this$props5.autoPlaylist,_this$props5$provider=_this$props5.provider,currentTime=_this$props5$provider.currentTime,duration=_this$props5$provider.duration,fullscreen=_this$props5$provider.fullscreen;return/*#__PURE__*/_jsx(VideoWrapperStyled,{fullscreen:fullscreen,show:!showSpinnerNextVideo(currentTime,endTime,duration,autoPlaylist),children:/*#__PURE__*/_jsx(VideoStyled// tslint:disable-next-line:jsx-no-lambda\n,{innerRef:function innerRef(c){_this3.video=c;},autoPlay:autoPlay,src:src,playsinline:true,preload:\"auto\",onLoadStart:this.handleLoadStart,onWaiting:this.handleWaiting,onCanPlay:this.handleCanPlay,onPlaying:this.handlePlaying,onEnded:this.handleEnded,onSeeking:this.handleSeeking,onSeeked:this.handleSeeked,onPlay:this.handlePlay,onPause:this.handlePause,onProgress:this.handleProgress,onDurationChange:this.handleDurationChange,onEmptied:this.handleEmptied,onLoadedMetadata:this.handleLoadedMetaData,onLoadedData:this.handleLoadedData,onTimeUpdate:this.handleTimeUpdate,onVolumeChange:this.handleVolumeChange,children:this.props.children})});}}]);return Video;}(React.Component);export{Video as default};","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/Video.tsx"],"names":["React","mediaProperties","showSpinnerNextVideo","VideoStyled","VideoWrapperStyled","Video","video","play","props","currentVideoClip","endTime","startTime","duration","provider","fixEndTime","currentTime","pause","togglePlay","paused","seek","time","e","forward","seconds","finalCurrentTime","replay","handleLoadStart","onLoadStart","getVideo","handleCanPlay","canPlay","handlePlaying","playing","handlePlay","handlePause","handleDurationChange","reload","handleProgress","handleEnded","end","handleWaiting","waiting","handleSeeking","seeking","handleSeeked","seeked","handleEmptied","handleLoadedMetaData","handleLoadedData","handleTimeUpdate","handleVolumeChange","changeVolume","nextProps","id","src","volume","reduce","properties","key","muted","val","autoPlay","autoPlaylist","fullscreen","c","children","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { mediaProperties } from \"./consts\";\nimport { IProps as IPropsFromPlayer } from \"./FullVideo\";\nimport { showSpinnerNextVideo } from \"../../utils\";\nimport { VideoStyled, VideoWrapperStyled } from \"./styles\";\n\nexport interface IProps extends IPropsFromPlayer {\n  children?: any;\n}\n\nexport default class Video extends React.Component<IProps> {\n  public video: HTMLVideoElement;\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    // Bug when try to repeat the same video with different id\n    const {\n      currentVideoClip: { id, src }\n    } = this.props;\n    if (\n      nextProps.currentVideoClip.id !== id &&\n      nextProps.currentVideoClip.src === src\n    ) {\n      this.video.currentTime = nextProps.currentVideoClip.startTime;\n      this.play();\n    }\n  }\n\n  public componentDidMount() {\n    this.volume = this.props.provider.volume;\n  }\n\n  public getVideo() {\n    if (!this.video) {\n      return null;\n    }\n\n    return mediaProperties.reduce((properties, key) => {\n      properties[key] = this.video[key];\n      return properties;\n    }, {});\n  }\n\n  get muted() {\n    return this.video.muted;\n  }\n\n  set muted(val) {\n    this.video.muted = val;\n  }\n\n  get volume() {\n    return this.video.volume;\n  }\n\n  set volume(val) {\n    if (val > 1) {\n      val = 1;\n    }\n    if (val < 0) {\n      val = 0;\n    }\n    this.video.volume = val;\n  }\n\n  public play = () => {\n    const {\n      currentVideoClip: { endTime, startTime },\n      provider: { duration }\n    } = this.props;\n    const fixEndTime = endTime > duration ? duration : endTime;\n    if (\n      this.video.currentTime >= fixEndTime ||\n      this.video.currentTime <= startTime\n    ) {\n      this.video.currentTime = startTime;\n    }\n    this.video.play();\n  };\n\n  public pause = () => {\n    this.video.pause();\n  };\n\n  public togglePlay = () => {\n    if (this.video.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  public seek = (time: number) => {\n    try {\n      this.video.currentTime = time;\n    } catch (e) {\n      //\n    }\n  };\n\n  public forward = (seconds: number) => {\n    const {\n      currentVideoClip: { endTime, startTime }\n    } = this.props;\n    let finalCurrentTime = this.video.currentTime + seconds;\n    if (finalCurrentTime >= endTime) {\n      finalCurrentTime = startTime;\n    } else if (finalCurrentTime <= startTime) {\n      finalCurrentTime = endTime;\n    }\n    this.seek(finalCurrentTime);\n  };\n\n  public replay = (seconds: number) => {\n    this.forward(-seconds);\n  };\n\n  public handleLoadStart = () => {\n    const {\n      onLoadStart,\n      currentVideoClip: { startTime }\n    } = this.props;\n    onLoadStart(this.getVideo());\n\n    this.video.currentTime = startTime || 0;\n  };\n\n  public handleCanPlay = () => {\n    this.props.canPlay(this.getVideo());\n  };\n\n  public handlePlaying = () => {\n    this.props.playing(this.getVideo());\n  };\n\n  public handlePlay = () => {\n    this.props.play(this.getVideo());\n  };\n\n  public handlePause = () => {\n    this.props.pause(this.getVideo());\n  };\n\n  public handleDurationChange = () => {\n    this.props.reload(this.getVideo());\n  };\n\n  public handleProgress = () => {\n    if (this.video) {\n      this.props.reload(this.getVideo());\n    }\n  };\n\n  public handleEnded = () => {\n    const { end } = this.props;\n    end(this.getVideo());\n  };\n\n  public handleWaiting = () => {\n    this.props.waiting(this.getVideo());\n  };\n\n  public handleSeeking = () => {\n    this.props.seeking(this.getVideo());\n  };\n\n  public handleSeeked = () => {\n    this.props.seeked(this.getVideo());\n  };\n\n  public handleEmptied = () => {\n    this.props.reload(this.getVideo());\n  };\n\n  public handleLoadedMetaData = () => {\n    const {\n      currentVideoClip: { startTime },\n      reload\n    } = this.props;\n    if (startTime && startTime > 0) {\n      this.video.currentTime = startTime;\n    }\n    reload(this.getVideo());\n  };\n\n  public handleLoadedData = () => {\n    this.props.reload(this.getVideo());\n  };\n\n  public handleTimeUpdate = () => {\n    const {\n      reload,\n      currentVideoClip: { endTime }\n    } = this.props;\n    if (this.video.currentTime >= endTime) {\n      this.pause();\n    }\n    reload(this.getVideo());\n  };\n\n  public handleVolumeChange = () => {\n    this.props.changeVolume(this.getVideo());\n  };\n\n  public render() {\n    const {\n      autoPlay = false,\n      currentVideoClip: { src, endTime },\n      autoPlaylist,\n      provider: { currentTime, duration, fullscreen }\n    } = this.props;\n\n    return (\n      <VideoWrapperStyled\n        fullscreen={fullscreen}\n        show={\n          !showSpinnerNextVideo(currentTime, endTime, duration, autoPlaylist)\n        }\n      >\n        <VideoStyled\n          // tslint:disable-next-line:jsx-no-lambda\n          innerRef={(c: any) => {\n            this.video = c;\n          }}\n          autoPlay={autoPlay}\n          src={src}\n          playsinline={true}\n          preload=\"auto\"\n          onLoadStart={this.handleLoadStart}\n          onWaiting={this.handleWaiting}\n          onCanPlay={this.handleCanPlay}\n          onPlaying={this.handlePlaying}\n          onEnded={this.handleEnded}\n          onSeeking={this.handleSeeking}\n          onSeeked={this.handleSeeked}\n          onPlay={this.handlePlay}\n          onPause={this.handlePause}\n          onProgress={this.handleProgress}\n          onDurationChange={this.handleDurationChange}\n          onEmptied={this.handleEmptied}\n          onLoadedMetadata={this.handleLoadedMetaData}\n          onLoadedData={this.handleLoadedData}\n          onTimeUpdate={this.handleTimeUpdate}\n          onVolumeChange={this.handleVolumeChange}\n        >\n          {this.props.children}\n        </VideoStyled>\n      </VideoWrapperStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}