{"ast":null,"code":"import * as React from \"react\";\nexport default class Shortcut extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeycodes = void 0;\n\n    this.handleKeyPress = e => {\n      const {\n        isActive\n      } = this.props.provider;\n\n      if (!isActive) {\n        return;\n      }\n\n      const keyCode = e.keyCode || e.which;\n      const shortcut = this.handleKeycodes.filter(handle => {\n        if (!handle.keyCode || handle.keyCode - keyCode !== 0) {\n          return false;\n        }\n\n        return true;\n      })[0];\n\n      if (shortcut) {\n        shortcut.handle();\n        e.preventDefault();\n      }\n    };\n\n    this.togglePlay = () => {\n      this.props.video.togglePlay();\n    };\n\n    this.leftArrow = () => {\n      this.props.video.replay(5);\n    };\n\n    this.rightArrow = () => {\n      this.props.video.forward(5);\n    };\n\n    this.upArrow = () => {\n      const {\n        video\n      } = this.props;\n      let volume = video.volume + 0.05;\n\n      if (volume > 1) {\n        volume = 1;\n      }\n\n      video.volume = volume;\n      this.checkMuted();\n    };\n\n    this.downArrow = () => {\n      const {\n        video\n      } = this.props;\n      let volume = video.volume - 0.05;\n\n      if (volume < 0) {\n        volume = 0;\n      }\n\n      video.volume = volume;\n      this.checkMuted();\n    };\n\n    this.handleKeycodes = [{\n      handle: this.togglePlay,\n      keyCode: 32 // spacebar\n\n    }, {\n      handle: this.leftArrow,\n      keyCode: 37 // Left arrow\n\n    }, {\n      handle: this.rightArrow,\n      keyCode: 39 // Right arrow\n\n    }, {\n      handle: this.upArrow,\n      keyCode: 38 // Up arrow\n\n    }, {\n      handle: this.downArrow,\n      keyCode: 40 // Down arrow\n\n    }];\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  checkMuted() {\n    const {\n      video\n    } = this.props;\n\n    if (video.volume === 0) {\n      video.muted = true;\n    } else {\n      video.muted = false;\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/components/FullVideo/Shortcut.tsx"],"names":["React","Shortcut","Component","constructor","props","handleKeycodes","handleKeyPress","e","isActive","provider","keyCode","which","shortcut","filter","handle","preventDefault","togglePlay","video","leftArrow","replay","rightArrow","forward","upArrow","volume","checkMuted","downArrow","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","muted","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromPlayer } from \"./FullVideo\";\n\ninterface IProps extends IPropsFromPlayer {\n  video: Video;\n}\n\ninterface IHandleKeyCode {\n  handle: any;\n  keyCode: number;\n}\n\nexport default class Shortcut extends React.Component<IProps> {\n  public handleKeycodes: IHandleKeyCode[];\n\n  constructor(props) {\n    super(props);\n    this.handleKeycodes = [\n      {\n        handle: this.togglePlay,\n        keyCode: 32 // spacebar\n      },\n      {\n        handle: this.leftArrow,\n        keyCode: 37 // Left arrow\n      },\n      {\n        handle: this.rightArrow,\n        keyCode: 39 // Right arrow\n      },\n      {\n        handle: this.upArrow,\n        keyCode: 38 // Up arrow\n      },\n      {\n        handle: this.downArrow,\n        keyCode: 40 // Down arrow\n      }\n    ];\n  }\n\n  public componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  public handleKeyPress = e => {\n    const { isActive } = this.props.provider\n\n    if (!isActive) {\n      return\n    }\n    const keyCode = e.keyCode || e.which;\n\n    const shortcut = this.handleKeycodes.filter(handle => {\n      if (!handle.keyCode || handle.keyCode - keyCode !== 0) {\n        return false;\n      }\n      return true;\n    })[0];\n\n    if (shortcut) {\n      shortcut.handle();\n      e.preventDefault();\n    }\n  };\n\n  public togglePlay = () => {\n    this.props.video.togglePlay();\n  };\n\n  public leftArrow = () => {\n    this.props.video.replay(5);\n  };\n\n  public rightArrow = () => {\n    this.props.video.forward(5);\n  };\n\n  public upArrow = () => {\n    const { video } = this.props;\n    let volume = video.volume + 0.05;\n    if (volume > 1) {\n      volume = 1;\n    }\n    video.volume = volume;\n    this.checkMuted();\n  };\n\n  public downArrow = () => {\n    const { video } = this.props;\n    let volume = video.volume - 0.05;\n    if (volume < 0) {\n      volume = 0;\n    }\n    video.volume = volume;\n    this.checkMuted();\n  };\n\n  public checkMuted() {\n    const { video } = this.props;\n    if (video.volume === 0) {\n      video.muted = true;\n    } else {\n      video.muted = false;\n    }\n  }\n\n  public render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}