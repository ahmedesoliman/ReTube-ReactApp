{"ast":null,"code":"import _objectSpread from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import Item from\"./Item\";import{PlaylistHeadStyled,PlaylistBodyStyled,PlaylistHeadItemStyled,PlaylistWrapper,PlaylistContainer}from\"./styles\";import{isTypeEqual}from\"../../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var VideoClipContainer=function VideoClipContainer(props){return props.children(props.id);};export var PlaylistHeader=function PlaylistHeader(props){return/*#__PURE__*/_jsx(PlaylistHeadItemStyled,{children:props.children});};var Playlist=function Playlist(props){var renderHeader=function renderHeader(){var listPlaylistHeader=React.Children.toArray(props.children).filter(function(child){return isTypeEqual(child,PlaylistHeader);});if(listPlaylistHeader.length){return/*#__PURE__*/_jsx(PlaylistHeadStyled,{children:listPlaylistHeader});}return null;};var renderItemChildren=function renderItemChildren(id){return React.Children.toArray(props.children).filter(function(child){return isTypeEqual(child,VideoClipContainer);}).map(function(child){return/*#__PURE__*/React.cloneElement(child,{id:id});});};var _props$playlist=props.playlist,playlist=_props$playlist===void 0?[]:_props$playlist,onClick=props.onClick,idSelected=props.idSelected,expand=props.expand;return/*#__PURE__*/_jsx(PlaylistWrapper,{expand:expand,children:/*#__PURE__*/_jsxs(PlaylistContainer,{children:[renderHeader(),/*#__PURE__*/_jsx(PlaylistBodyStyled,{expand:expand,children:playlist.map(function(item,index){return/*#__PURE__*/_jsx(Item,_objectSpread(_objectSpread({selected:idSelected,index:index,expand:expand},item),{},{onClick:onClick,children:renderItemChildren(item.id)}),index);})})]})});};export default Playlist;","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/Playlist/Playlist.tsx"],"names":["React","Item","PlaylistHeadStyled","PlaylistBodyStyled","PlaylistHeadItemStyled","PlaylistWrapper","PlaylistContainer","isTypeEqual","VideoClipContainer","props","children","id","PlaylistHeader","Playlist","renderHeader","listPlaylistHeader","Children","toArray","filter","child","length","renderItemChildren","map","cloneElement","playlist","onClick","idSelected","expand","item","index"],"mappings":"+IAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OACEC,kBADF,CAEEC,kBAFF,CAGEC,sBAHF,CAIEC,eAJF,CAKEC,iBALF,KAMO,UANP,CAOA,OAASC,WAAT,KAA4B,aAA5B,C,wFAYA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeD,KAAK,CAACE,EAArB,CAAJ,EAAhC,CAEP,MAAO,IAAMC,CAAAA,cAA8B,CAAG,QAAjCA,CAAAA,cAAiC,CAAAH,KAAK,qBACjD,KAAC,sBAAD,WAAyBA,KAAK,CAACC,QAA/B,EADiD,EAA5C,CAIP,GAAMG,CAAAA,QAA2B,CAAG,QAA9BA,CAAAA,QAA8B,CAAAJ,KAAK,CAAI,CAC3C,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA0B,CAC7C,GAAMC,CAAAA,kBAAkB,CAAGf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuBR,KAAK,CAACC,QAA7B,EAAuCQ,MAAvC,CACzB,SAACC,KAAD,CAAgB,CACd,MAAOZ,CAAAA,WAAW,CAACY,KAAD,CAAQP,cAAR,CAAlB,CACD,CAHwB,CAA3B,CAKA,GAAIG,kBAAkB,CAACK,MAAvB,CAA+B,CAC7B,mBAAO,KAAC,kBAAD,WAAqBL,kBAArB,EAAP,CACD,CACD,MAAO,KAAP,CACD,CAVD,CAYA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACV,EAAD,CAAgB,CACzC,MAAOX,CAAAA,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuBR,KAAK,CAACC,QAA7B,EACJQ,MADI,CACG,SAACC,KAAD,CAAgB,CACtB,MAAOZ,CAAAA,WAAW,CAACY,KAAD,CAAQX,kBAAR,CAAlB,CACD,CAHI,EAIJc,GAJI,CAIA,SAACH,KAAD,qBAAgBnB,KAAK,CAACuB,YAAN,CAAmBJ,KAAnB,CAA0B,CAAER,EAAE,CAAFA,EAAF,CAA1B,CAAhB,EAJA,CAAP,CAKD,CAND,CAQA,oBAAuDF,KAAvD,CAAQe,QAAR,CAAQA,QAAR,0BAAmB,EAAnB,iBAAuBC,OAAvB,CAAuDhB,KAAvD,CAAuBgB,OAAvB,CAAgCC,UAAhC,CAAuDjB,KAAvD,CAAgCiB,UAAhC,CAA4CC,MAA5C,CAAuDlB,KAAvD,CAA4CkB,MAA5C,CACA,mBACE,KAAC,eAAD,EAAiB,MAAM,CAAEA,MAAzB,uBACE,MAAC,iBAAD,YACGb,YAAY,EADf,cAEE,KAAC,kBAAD,EAAoB,MAAM,CAAEa,MAA5B,UACGH,QAAQ,CAACF,GAAT,CAAa,SAACM,IAAD,CAAOC,KAAP,qBACZ,KAAC,IAAD,8BACE,QAAQ,CAAEH,UADZ,CAEE,KAAK,CAAEG,KAFT,CAIE,MAAM,CAAEF,MAJV,EAKMC,IALN,MAME,OAAO,CAAEH,OANX,UAQGJ,kBAAkB,CAACO,IAAI,CAACjB,EAAN,CARrB,GAGOkB,KAHP,CADY,EAAb,CADH,EAFF,GADF,EADF,CAqBD,CA3CD,CA6CA,cAAehB,CAAAA,QAAf","sourcesContent":["import * as React from \"react\";\nimport { IVideoClip } from \"../types\";\nimport Item from \"./Item\";\nimport {\n  PlaylistHeadStyled,\n  PlaylistBodyStyled,\n  PlaylistHeadItemStyled,\n  PlaylistWrapper,\n  PlaylistContainer\n} from \"./styles\";\nimport { isTypeEqual } from \"../../utils\";\n\nexport interface IPropsExternal {\n  onClick?: (id: string) => void;\n  playlist?: IVideoClip[];\n  idSelected?: string;\n  expand?: boolean;\n  children?: any;\n}\n\nexport interface IProps extends IPropsExternal {}\n\nexport const VideoClipContainer = props => props.children(props.id);\n\nexport const PlaylistHeader: React.SFC<any> = props => (\n  <PlaylistHeadItemStyled>{props.children}</PlaylistHeadItemStyled>\n);\n\nconst Playlist: React.SFC<IProps> = props => {\n  const renderHeader = (): JSX.Element | null => {\n    const listPlaylistHeader = React.Children.toArray(props.children).filter(\n      (child: any) => {\n        return isTypeEqual(child, PlaylistHeader);\n      }\n    );\n    if (listPlaylistHeader.length) {\n      return <PlaylistHeadStyled>{listPlaylistHeader}</PlaylistHeadStyled>;\n    }\n    return null;\n  };\n\n  const renderItemChildren = (id: string) => {\n    return React.Children.toArray(props.children)\n      .filter((child: any) => {\n        return isTypeEqual(child, VideoClipContainer);\n      })\n      .map((child: any) => React.cloneElement(child, { id }));\n  };\n\n  const { playlist = [], onClick, idSelected, expand } = props;\n  return (\n    <PlaylistWrapper expand={expand}>\n      <PlaylistContainer>\n        {renderHeader()}\n        <PlaylistBodyStyled expand={expand}>\n          {playlist.map((item, index) => (\n            <Item\n              selected={idSelected}\n              index={index}\n              key={index}\n              expand={expand}\n              {...item}\n              onClick={onClick}\n            >\n              {renderItemChildren(item.id)}\n            </Item>\n          ))}\n        </PlaylistBodyStyled>\n      </PlaylistContainer>\n    </PlaylistWrapper>\n  );\n};\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}