{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\retube-reactApp\\\\src\\\\components\\\\Form\\\\InputLabel.tsx\";\nimport * as React from \"react\";\nimport TagsInput from \"react-tagsinput\";\nimport InputTime from \"./InputTime\";\nimport { InputStyled, LabelStyled, InputLabelGeneralStyled, InputLabelTagStyled, ErrorStyled, VerifyStyled, LoadingStyled, LabelTagsStyled } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputLabel = props => {\n  const type = props.type || \"text\";\n\n  const handleChange = event => {\n    if (type === \"tags\") {\n      const tags = event;\n      let formatTags = [];\n      tags.forEach(tag => {\n        if (tag.indexOf(\",\") > -1) {\n          formatTags = formatTags.concat(tag.split(\",\").map(item => item.trim()));\n        } else {\n          formatTags.push(tag);\n        }\n      });\n      props.onChange(formatTags);\n    } else {\n      props.onChange(event.target.value);\n    }\n  };\n\n  return type === \"tags\" ? /*#__PURE__*/_jsxDEV(InputLabelTagStyled, {\n    children: [/*#__PURE__*/_jsxDEV(LabelTagsStyled, {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: props.value,\n      addOnBlur: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(InputLabelGeneralStyled, {\n    children: [props.label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), type === \"time\" ? /*#__PURE__*/_jsxDEV(InputTime, {\n      value: props.value,\n      onChange: handleChange,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(InputStyled, {\n      value: props.value,\n      onChange: handleChange,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), props.error && /*#__PURE__*/_jsxDEV(ErrorStyled, {\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this), props.loading && /*#__PURE__*/_jsxDEV(LoadingStyled, {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), props.complete && /*#__PURE__*/_jsxDEV(VerifyStyled, {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputLabel;\nexport default InputLabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputLabel\");","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/Form/InputLabel.tsx"],"names":["React","TagsInput","InputTime","InputStyled","LabelStyled","InputLabelGeneralStyled","InputLabelTagStyled","ErrorStyled","VerifyStyled","LoadingStyled","LabelTagsStyled","InputLabel","props","type","handleChange","event","tags","formatTags","forEach","tag","indexOf","concat","split","map","item","trim","push","onChange","target","value","label","placeholder","error","loading","complete"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,uBAHF,EAIEC,mBAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,eARF,QASO,UATP;;;AAsBA,MAAMC,UAA6B,GAAGC,KAAK,IAAI;AAC7C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAc,MAA3B;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAMG,IAAI,GAAGD,KAAb;AACA,UAAIE,UAAe,GAAG,EAAtB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAAiB;AAC5B,YAAIA,GAAG,CAACC,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAAxB,EAA2B;AACzBH,UAAAA,UAAU,GAAGA,UAAU,CAACI,MAAX,CACXF,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAA3B,CADW,CAAb;AAGD,SAJD,MAIO;AACLR,UAAAA,UAAU,CAACS,IAAX,CAAgBP,GAAhB;AACD;AACF,OARD;AASAP,MAAAA,KAAK,CAACe,QAAN,CAAeV,UAAf;AACD,KAbD,MAaO;AACLL,MAAAA,KAAK,CAACe,QAAN,CAAeZ,KAAK,CAACa,MAAN,CAAaC,KAA5B;AACD;AACF,GAjBD;;AAmBA,SAAOhB,IAAI,KAAK,MAAT,gBACL,QAAC,mBAAD;AAAA,4BACE,QAAC,eAAD;AAAA,gBAAkBD,KAAK,CAACkB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAElB,KAAK,CAACiB,KAAxB;AAA+B,MAAA,SAAS,EAAE,IAA1C;AAAgD,MAAA,QAAQ,EAAEf;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAML,QAAC,uBAAD;AAAA,eACGF,KAAK,CAACkB,KAAN,iBAAe,QAAC,WAAD;AAAA,gBAAclB,KAAK,CAACkB;AAApB;AAAA;AAAA;AAAA;AAAA,YADlB,EAEGjB,IAAI,KAAK,MAAT,gBACC,QAAC,SAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACiB,KADf;AAEE,MAAA,QAAQ,EAAEf,YAFZ;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACmB;AAHrB;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,WAAD;AACE,MAAA,KAAK,EAAEnB,KAAK,CAACiB,KADf;AAEE,MAAA,QAAQ,EAAEf,YAFZ;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACmB;AAHrB;AAAA;AAAA;AAAA;AAAA,YATJ,EAeGnB,KAAK,CAACoB,KAAN,iBAAe,QAAC,WAAD;AAAA,gBAAcpB,KAAK,CAACoB;AAApB;AAAA;AAAA;AAAA;AAAA,YAflB,EAgBGpB,KAAK,CAACqB,OAAN,iBACC,QAAC,aAAD;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBJ,EAqBGrB,KAAK,CAACsB,QAAN,iBACC,QAAC,YAAD;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANF;AAkCD,CAxDD;;KAAMvB,U;AA0DN,eAAeA,UAAf","sourcesContent":["import * as React from \"react\";\nimport TagsInput from \"react-tagsinput\";\nimport InputTime from \"./InputTime\";\nimport {\n  InputStyled,\n  LabelStyled,\n  InputLabelGeneralStyled,\n  InputLabelTagStyled,\n  ErrorStyled,\n  VerifyStyled,\n  LoadingStyled,\n  LabelTagsStyled\n} from \"./styles\";\n\ninterface IProps {\n  value: any;\n  error?: string;\n  loading?: boolean;\n  complete?: boolean;\n  type?: string;\n  label?: string;\n  placeholder?: string;\n  onChange: (value: string) => void;\n}\n\nconst InputLabel: React.SFC<IProps> = props => {\n  const type = props.type || \"text\";\n\n  const handleChange = event => {\n    if (type === \"tags\") {\n      const tags = event;\n      let formatTags: any = [];\n      tags.forEach((tag: string) => {\n        if (tag.indexOf(\",\") > -1) {\n          formatTags = formatTags.concat(\n            tag.split(\",\").map(item => item.trim())\n          );\n        } else {\n          formatTags.push(tag);\n        }\n      });\n      props.onChange(formatTags);\n    } else {\n      props.onChange(event.target.value);\n    }\n  };\n\n  return type === \"tags\" ? (\n    <InputLabelTagStyled>\n      <LabelTagsStyled>{props.label}</LabelTagsStyled>\n      <TagsInput value={props.value} addOnBlur={true} onChange={handleChange} />\n    </InputLabelTagStyled>\n  ) : (\n    <InputLabelGeneralStyled>\n      {props.label && <LabelStyled>{props.label}</LabelStyled>}\n      {type === \"time\" ? (\n        <InputTime\n          value={props.value}\n          onChange={handleChange}\n          placeholder={props.placeholder}\n        />\n      ) : (\n        <InputStyled\n          value={props.value}\n          onChange={handleChange}\n          placeholder={props.placeholder}\n        />\n      )}\n      {props.error && <ErrorStyled>{props.error}</ErrorStyled>}\n      {props.loading && (\n        <LoadingStyled>\n          <i className=\"fas fa-spinner fa-spin\" />\n        </LoadingStyled>\n      )}\n      {props.complete && (\n        <VerifyStyled>\n          <i className=\"fas fa-check-circle\" />\n        </VerifyStyled>\n      )}\n    </InputLabelGeneralStyled>\n  );\n};\n\nexport default InputLabel;\n"]},"metadata":{},"sourceType":"module"}