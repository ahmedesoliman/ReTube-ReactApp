{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitHub\\\\todolist-react\\\\src\\\\screens\\\\FullPlayer\\\\FullPlayer.tsx\";\nimport * as React from \"react\";\nimport { FullVideo, VideoPlayer, Playlist, VideoClipContainer, ContentFullStyled, PageStyled, LayoutFullVideo } from \"../../components\";\nimport AppProvider from \"../../AppProvider\";\nimport { isMobile } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FullPlayer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEdit = idSelected => {\n      this.props.history.push(\"/edit/\" + idSelected);\n    };\n\n    this.handleUpdateSelected = idSelected => {\n      this.props.history.push(\"/video/\" + idSelected);\n    };\n  }\n\n  componentWillMount() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    this.props.setInFullPlayer(true);\n    this.props.setIdVideo(this.props.match.params.id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const idVideo = this.props.match.params.id;\n    const newIdVideo = nextProps.match.params.id;\n\n    if (idVideo !== newIdVideo) {\n      this.props.setIdVideo(newIdVideo);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.setInFullPlayer(false);\n  }\n\n  render() {\n    const routerParams = this.props.match.params;\n    return /*#__PURE__*/_jsxDEV(PageStyled, {\n      children: /*#__PURE__*/_jsxDEV(ContentFullStyled, {\n        children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          random: this.props.random,\n          onChangeRandom: this.props.setRandom,\n          onRemoveVideoClip: this.props.removePlaylistItem,\n          idSelected: routerParams.id,\n          autoPlaylist: this.props.autoPlaylist,\n          repeat: this.props.repeat,\n          onChangeAutoPlaylist: this.props.setAutoPlaylist,\n          onChangeRepeat: this.props.setRepeat,\n          onChangeSelected: this.handleUpdateSelected,\n          onChangeVideoClip: this.props.setVideoClip,\n          playlist: this.props.playlist,\n          children: [isMobile ? /*#__PURE__*/_jsxDEV(LayoutFullVideo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(FullVideo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            children: /*#__PURE__*/_jsxDEV(VideoClipContainer, {\n              children: idVideoClip => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [routerParams.id !== idVideoClip && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.props.removePlaylistItem.bind(null, idVideoClip),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.handleEdit.bind(null, idVideoClip),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default (props => /*#__PURE__*/_jsxDEV(AppProvider.Consumer, {\n  children: value => /*#__PURE__*/_jsxDEV(FullPlayer, { ...props,\n    ...value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 31\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/gitHub/todolist-react/src/screens/FullPlayer/FullPlayer.tsx"],"names":["React","FullVideo","VideoPlayer","Playlist","VideoClipContainer","ContentFullStyled","PageStyled","LayoutFullVideo","AppProvider","isMobile","FullPlayer","Component","handleEdit","idSelected","props","history","push","handleUpdateSelected","componentWillMount","document","body","scrollTop","documentElement","setInFullPlayer","setIdVideo","match","params","id","componentWillReceiveProps","nextProps","idVideo","newIdVideo","componentWillUnmount","render","routerParams","random","setRandom","removePlaylistItem","autoPlaylist","repeat","setAutoPlaylist","setRepeat","setVideoClip","playlist","idVideoClip","bind","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  FullVideo,\n  VideoPlayer,\n  Playlist,\n  VideoClipContainer,\n  ContentFullStyled,\n  PageStyled,\n  LayoutFullVideo\n} from \"../../components\";\n\nimport AppProvider, { IAppProvider } from \"../../AppProvider\";\nimport { isMobile } from \"../../utils\";\n\ninterface IRouterProps {\n  id: string;\n}\n\ninterface IProps extends IAppProvider, RouteComponentProps<IRouterProps> {}\n\nclass FullPlayer extends React.Component<IProps> {\n  public componentWillMount() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    this.props.setInFullPlayer(true);\n    this.props.setIdVideo(this.props.match.params.id);\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    const idVideo = this.props.match.params.id;\n    const newIdVideo = nextProps.match.params.id;\n\n    if (idVideo !== newIdVideo) {\n      this.props.setIdVideo(newIdVideo);\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.setInFullPlayer(false);\n  }\n\n  public handleEdit = (idSelected: string) => {\n    this.props.history.push(\"/edit/\" + idSelected);\n  };\n\n  public handleUpdateSelected = (idSelected: string) => {\n    this.props.history.push(\"/video/\" + idSelected);\n  };\n\n  public render() {\n    const routerParams = this.props.match.params;\n\n    return (\n      <PageStyled>\n        <ContentFullStyled>\n          <VideoPlayer\n            random={this.props.random}\n            onChangeRandom={this.props.setRandom}\n            onRemoveVideoClip={this.props.removePlaylistItem}\n            idSelected={routerParams.id}\n            autoPlaylist={this.props.autoPlaylist}\n            repeat={this.props.repeat}\n            onChangeAutoPlaylist={this.props.setAutoPlaylist}\n            onChangeRepeat={this.props.setRepeat}\n            onChangeSelected={this.handleUpdateSelected}\n            onChangeVideoClip={this.props.setVideoClip}\n            playlist={this.props.playlist}\n          >\n            {isMobile ? <LayoutFullVideo /> : <FullVideo />}\n            <Playlist>\n              <VideoClipContainer>\n                {idVideoClip => (\n                  <React.Fragment>\n                    {routerParams.id !== idVideoClip && (\n                      <button\n                        onClick={this.props.removePlaylistItem.bind(\n                          null,\n                          idVideoClip\n                        )}\n                      >\n                        <i className=\"fas fa-trash-alt\" />\n                      </button>\n                    )}\n                    <button onClick={this.handleEdit.bind(null, idVideoClip)}>\n                      <i className=\"fas fa-edit\" />\n                    </button>\n                  </React.Fragment>\n                )}\n              </VideoClipContainer>\n            </Playlist>\n          </VideoPlayer>\n        </ContentFullStyled>\n      </PageStyled>\n    );\n  }\n}\n\nexport default (props: RouteComponentProps<IRouterProps>) => (\n  <AppProvider.Consumer>\n    {(value: IAppProvider) => <FullPlayer {...props} {...value} />}\n  </AppProvider.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}