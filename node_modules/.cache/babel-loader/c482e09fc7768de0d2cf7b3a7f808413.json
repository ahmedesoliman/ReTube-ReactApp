{"ast":null,"code":"import _slicedToArray from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/gitHub/retube-reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import Slider,{createSliderWithTooltip}from\"rc-slider\";import{FragmentControlStyled}from\"./styles\";import{convertToTimeRange,convertToTime,formatTooltipRange}from\"../../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";var SliderWithTooltip=createSliderWithTooltip(Slider.Range);var FragmentControl=/*#__PURE__*/function(_React$Component){_inherits(FragmentControl,_React$Component);var _super=_createSuper(FragmentControl);function FragmentControl(){var _this;_classCallCheck(this,FragmentControl);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={changed:false,value:{max:1,min:0}};_this.props=void 0;_this.handleChange=function(_ref){var _ref2=_slicedToArray(_ref,2),min=_ref2[0],max=_ref2[1];_this.setState({changed:true,value:{min:min,max:max}});};_this.handleChangeComplete=function(_ref3){var _ref4=_slicedToArray(_ref3,2),min=_ref4[0],max=_ref4[1];var _this$props=_this.props,_this$props$provider=_this$props.provider,duration=_this$props$provider.duration,editActive=_this$props$provider.editActive,_this$props$currentVi=_this$props.currentVideoClip,startTime=_this$props$currentVi.startTime,endTime=_this$props$currentVi.endTime,editingValues=_this$props.editingValues;if(editActive){editingValues({editMax:convertToTime(max,duration),editMin:convertToTime(min,duration)});}else{min=convertToTimeRange(startTime,duration);max=convertToTimeRange(endTime,duration);}_this.setState({changed:false,value:{min:min,max:max}});};return _this;}_createClass(FragmentControl,[{key:\"componentWillMount\",value:function componentWillMount(){var _this$props2=this.props,duration=_this$props2.provider.duration,_this$props2$currentV=_this$props2.currentVideoClip,startTime=_this$props2$currentV.startTime,endTime=_this$props2$currentV.endTime;this.updateValue(startTime,endTime,duration);}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this$props3=this.props,duration=_this$props3.provider.duration,_this$props3$currentV=_this$props3.currentVideoClip,startTime=_this$props3$currentV.startTime,endTime=_this$props3$currentV.endTime;// Changed video\nif(nextProps.provider.duration&&(nextProps.currentVideoClip.startTime!==startTime||nextProps.currentVideoClip.endTime!==endTime||nextProps.provider.duration!==duration)){var provider=nextProps.provider;this.updateValue(nextProps.currentVideoClip.startTime,nextProps.currentVideoClip.endTime,provider.duration);}}},{key:\"updateValue\",value:function updateValue(startTime,endTime,duration){var editingValues=this.props.editingValues;var max=convertToTimeRange(endTime,duration);var min=convertToTimeRange(startTime,duration);this.setState({value:{max:max,min:min}});editingValues({editMax:endTime,editMin:startTime});}},{key:\"range\",get:function get(){var _this$props4=this.props,_this$props4$provider=_this$props4.provider,duration=_this$props4$provider.duration,editActive=_this$props4$provider.editActive,_this$props4$currentV=_this$props4.currentVideoClip,startTime=_this$props4$currentV.startTime,endTime=_this$props4$currentV.endTime;var _this$state=this.state,changed=_this$state.changed,value=_this$state.value;if(changed||editActive){return value;}return{max:convertToTimeRange(endTime,duration),min:convertToTimeRange(startTime,duration)};}},{key:\"value\",get:function get(){var _this$range=this.range,min=_this$range.min,max=_this$range.max;return[min,max];}},{key:\"render\",value:function render(){var _this$props$provider2=this.props.provider,duration=_this$props$provider2.duration,editActive=_this$props$provider2.editActive;return/*#__PURE__*/_jsx(FragmentControlStyled,{editActive:editActive,children:/*#__PURE__*/_jsx(SliderWithTooltip,{className:\"mark-fragment\",max:1000,value:this.value,onChange:this.handleChange,onAfterChange:this.handleChangeComplete,tipFormatter:formatTooltipRange(duration)})});}}]);return FragmentControl;}(React.Component);export{FragmentControl as default};","map":{"version":3,"sources":["C:/gitHub/retube-reactApp/src/components/FullVideo/FragmentControl.tsx"],"names":["React","Slider","createSliderWithTooltip","FragmentControlStyled","convertToTimeRange","convertToTime","formatTooltipRange","SliderWithTooltip","Range","FragmentControl","state","changed","value","max","min","props","handleChange","setState","handleChangeComplete","provider","duration","editActive","currentVideoClip","startTime","endTime","editingValues","editMax","editMin","updateValue","nextProps","range","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Video from \"./Video\";\n\nimport { IPropsChildrens as IPropsFromFullVideo } from \"./FullVideo\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport { FragmentControlStyled } from \"./styles\";\nimport {\n  convertToTimeRange,\n  convertToTime,\n  formatTooltipRange,\n} from \"../../utils\";\n\ninterface IState {\n  changed: boolean;\n  value: { min: number; max: number };\n}\n\ninterface IProps extends IPropsFromFullVideo {\n  video: Video;\n}\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider.Range);\n\nexport default class FragmentControl extends React.Component<IProps, IState> {\n  public state = {\n    changed: false,\n    value: {\n      max: 1,\n      min: 0,\n    },\n  };\n  props: {\n    provider: { duration: any };\n    currentVideoClip: { startTime: any; endTime: any };\n  };\n\n  public componentWillMount() {\n    const {\n      provider: { duration },\n      currentVideoClip: { startTime, endTime },\n    } = this.props;\n\n    this.updateValue(startTime, endTime, duration);\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    const {\n      provider: { duration },\n      currentVideoClip: { startTime, endTime },\n    } = this.props;\n\n    // Changed video\n    if (\n      nextProps.provider.duration &&\n      (nextProps.currentVideoClip.startTime !== startTime ||\n        nextProps.currentVideoClip.endTime !== endTime ||\n        nextProps.provider.duration !== duration)\n    ) {\n      const provider = nextProps.provider;\n      this.updateValue(\n        nextProps.currentVideoClip.startTime,\n        nextProps.currentVideoClip.endTime,\n        provider.duration\n      );\n    }\n  }\n\n  public updateValue(startTime, endTime, duration) {\n    const { editingValues } = this.props;\n    const max = convertToTimeRange(endTime, duration);\n    const min = convertToTimeRange(startTime, duration);\n\n    this.setState({\n      value: {\n        max,\n        min,\n      },\n    });\n\n    editingValues({\n      editMax: endTime,\n      editMin: startTime,\n    });\n  }\n\n  get range() {\n    const {\n      provider: { duration, editActive },\n      currentVideoClip: { startTime, endTime },\n    } = this.props;\n\n    const { changed, value } = this.state;\n\n    if (changed || editActive) {\n      return value;\n    }\n\n    return {\n      max: convertToTimeRange(endTime, duration),\n      min: convertToTimeRange(startTime, duration),\n    };\n  }\n\n  get value() {\n    const { min, max } = this.range;\n    return [min, max];\n  }\n\n  public handleChange = ([min, max]: [number, number]) => {\n    this.setState({ changed: true, value: { min, max } });\n  };\n\n  public handleChangeComplete = ([min, max]: [number, number]) => {\n    const {\n      provider: { duration, editActive },\n      currentVideoClip: { startTime, endTime },\n      editingValues,\n    } = this.props;\n\n    if (editActive) {\n      editingValues({\n        editMax: convertToTime(max, duration),\n        editMin: convertToTime(min, duration),\n      });\n    } else {\n      min = convertToTimeRange(startTime, duration);\n      max = convertToTimeRange(endTime, duration);\n    }\n    this.setState({ changed: false, value: { min, max } });\n  };\n\n  public render() {\n    const {\n      provider: { duration, editActive },\n    } = this.props;\n    return (\n      <FragmentControlStyled editActive={editActive}>\n        <SliderWithTooltip\n          className=\"mark-fragment\"\n          max={1000}\n          value={this.value}\n          onChange={this.handleChange}\n          onAfterChange={this.handleChangeComplete}\n          tipFormatter={formatTooltipRange(duration)}\n        />\n      </FragmentControlStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}